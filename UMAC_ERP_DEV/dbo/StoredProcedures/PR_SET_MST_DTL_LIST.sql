/*
-- 생성자 :	강세미
-- 등록일 :	2023.01.30
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : SET 마스터 DTL 리스트 출력
-- 실행문 : 
EXEC PR_SET_MST_DTL_LIST '130093',null,null,'', ''
EXEC PR_SET_MST_DTL_LIST '','','','001'
*/
CREATE PROCEDURE [dbo].[PR_SET_MST_DTL_LIST]
( 
	@P_SCAN_CODE	NVARCHAR(14) = '',			-- 상품코드
	@P_LRG_CODE		NVARCHAR(2) = '',			-- 대분류코드
	@P_MID_CODE		NVARCHAR(4) = '',			-- 중분류코드
	@P_SET_CD		NVARCHAR(4) = '',			-- SET관리코드
	@P_SET_CD_ALL	NVARCHAR(1) = 'N'			-- 상품에 포함된 구성품 전체 : Y, N
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	BEGIN TRY 
	
	IF ISNULL(@P_SET_CD, '') = '' AND @P_SET_CD_ALL = 'Y' 
	BEGIN
		
			SELECT ROW_NUMBER() OVER(ORDER BY SET_COMP_CD) AS ROW_NUM
			  , A.SET_PROD_CD AS ITM_CODE
			  , B.SET_CD
			  , B.SET_COMP_CD
			  , B.SET_COMP_CD AS SET_COMP_CD_BEFORE
			  , B.COMP_QTY			  
			  , CM.ITM_NAME_DETAIL AS SET_COMP_NM
			  , CM.WEIGHT_GB
			FROM CD_SET_HDR AS A
				INNER JOIN CD_SET_DTL AS B 				
					ON A.SET_CD = B.SET_CD
				INNER JOIN CD_PRODUCT_CMN AS CM 
					ON B.SET_COMP_CD = CM.SCAN_CODE
				INNER JOIN TBL_COMM_CD_MST AS E 
						ON E.CD_CL = 'WEIGHT_GB' AND CM.WEIGHT_GB = E.CD_ID
			WHERE A.SET_PROD_CD = @P_SCAN_CODE
			ORDER BY B.SET_CD ASC, B.SET_COMP_CD ASC

		RETURN
	END

	IF ISNULL(@P_SET_CD, '') = ''
		BEGIN
			
			SELECT  
				T.ROW_NUM,
				T.SET_CD,
				T.SET_COMP_CD,
				T.SET_COMP_CD_BEFORE,
				CM.ITM_NAME_DETAIL AS SET_COMP_NM,
				COMP_QTY,
				T.ITM_CODE,
				'' AS WEIGHT_GB
			FROM (
				SELECT ROW_NUMBER() OVER(ORDER BY SET_COMP_CD) AS ROW_NUM
				  , '' AS SET_CD
				  , A.SET_COMP_CD
				  , A.SET_COMP_CD AS SET_COMP_CD_BEFORE
				  , 0.00 AS COMP_QTY
				  , B.ITM_CODE
				 FROM CD_SET_DTL AS A
					INNER JOIN CD_PRODUCT_CMN AS B
						ON B.SCAN_CODE = A.SET_COMP_CD
					INNER JOIN CD_MID_MST AS C
						ON C.MID_CODE = B.MID_CODE
					INNER JOIN CD_LRG_MST AS D
						ON D.LRG_CODE = C.LRG_CODE
		 		WHERE  B.SCAN_CODE = (CASE WHEN @P_SCAN_CODE <> '' THEN @P_SCAN_CODE ELSE B.SCAN_CODE END)
						AND (D.LRG_CODE = (CASE WHEN @P_LRG_CODE <> '' THEN @P_LRG_CODE ELSE D.LRG_CODE END) AND C.MID_CODE = (CASE WHEN @P_MID_CODE <> '' THEN @P_MID_CODE ELSE C.MID_CODE END))
			   GROUP BY A.SET_COMP_CD, ITM_CODE
			) AS T INNER JOIN CD_PRODUCT_CMN AS CM ON T.SET_COMP_CD = CM.SCAN_CODE

		END
	ELSE 
		BEGIN
			SELECT ROW_NUMBER() OVER(ORDER BY SET_CD) AS ROW_NUM
			  , A.SET_CD
			  , A.SET_COMP_CD
			  , A.SET_COMP_CD AS SET_COMP_CD_BEFORE			  
			  , B.ITM_NAME_DETAIL AS SET_COMP_NM
			  , A.COMP_QTY
			  , B.ITM_CODE
			  , C.WEIGHT_GB
			 FROM CD_SET_DTL AS A
				INNER JOIN CD_PRODUCT_CMN AS B
					ON B.SCAN_CODE = A.SET_COMP_CD
				INNER JOIN CD_PRODUCT_CMN AS C
					ON C.SCAN_CODE = A.SET_COMP_CD
				INNER JOIN TBL_COMM_CD_MST AS D 
						ON D.CD_CL = 'WEIGHT_GB' AND C.WEIGHT_GB = D.CD_ID
		 	WHERE A.SET_CD = @P_SET_CD
		END

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

