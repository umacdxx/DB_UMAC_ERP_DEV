/*
-- 생성자 :	강세미
-- 등록일 :	2023.01.24
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 상품 마스터 리스트 출력
-- 실행문 : 
EXEC PR_PRODUCT_CMN_LIST '', '',''
*/
CREATE PROCEDURE [dbo].[PR_PRODUCT_CMN_LIST]
( 
	@P_ITM_NAME		NVARCHAR(100) = '',	-- 상품명(코드)
	@P_ITM_GB			NVARCHAR(1) = '',		-- 상품구분
	@P_GRE_GB			NVARCHAR(1) = '',		-- 매출(입) 구분
	@P_MID_CODE		NVARCHAR(4) = '',		-- 카테고리 중분류 코드
	@P_ITM_FORM		NVARCHAR(2) = ''		-- 상품형태
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	BEGIN TRY 
		SELECT A.ITM_CODE
			  , A.SCAN_CODE
			  , A.ITM_NAME
			  , A.ITM_NAME_DETAIL
			  , A.VEN_CODE
			  , A.VEN_CODE_2
			  , A.VEN_CODE_3
			  , A.VEN_CODE_4
			  , A.VEN_CODE_5
			  , A.GRE_GB
			  , F.CD_NM AS GRE_GB_NM
			  , A.ITM_GB
			  , D.CD_NM AS ITM_GB_NM
			  , A.END_IND
			  , A.MID_CODE
			  , C.LRG_CODE
			  , C.LRG_NAME + '>' + B.MID_NAME AS CATEGORY_NM
			  , A.ITM_FORM
			  , E.CD_NM AS ITM_FORM_NM
			  , A.TAX_GB
			  , A.UNIT
			  , A.WEIGHT_GB
			  , A.IPSU_QTY
			  , A.PLT_BOX_QTY
			  , A.[FILE_NAME]
			  , A.UNIT_CAPACITY
			  , A.UNIT_WEIGHT
			  , A.NET_WEIGHT
			  , A.BASE_WPRC
			  , A.BASE_WVAT
			  , A.BASE_SPRC
			  , A.BASE_SVAT
			  , A.WIDTH
			  , A.LENGTH
			  , A.DEPTH
			  , A.LOT_OIL_GB
			  , A.LOT_PARTNER_GB
			  , A.BOM_GB			  
			  , A.SET_GB			  
			  , A.EXPIRY_CNT
			  , A.CURRENCY_TYPE
			  , A.IDATE
			  , CASE WHEN A.ITM_FORM = '2' THEN ISNULL(G.BOX_EACH_QTY, 0) WHEN A.ITM_FORM = '3' OR A.ITM_FORM = '4' THEN 0 ELSE ISNULL(G.CUR_INV_QTY, 0) END AS CUR_INV_QTY
			  , CASE WHEN A.ITM_FORM = '2' THEN ISNULL(G.BOX_EACH_QTY, 0) - ISNULL(H.BOX_EACH_NOT_DELIVERY_QTY,0) WHEN A.ITM_FORM = '3' OR A.ITM_FORM = '4' THEN 0 ELSE ISNULL(G.CUR_INV_QTY, 0) - ISNULL(H.NOT_DELIVERY_QTY, 0) END AS AVL_INV_QTY
			  --, G.CUR_INV_QTY - H.NOT_DELIVERY_QTY AS AVL_INV_QTY
		  FROM CD_PRODUCT_CMN AS A			
				INNER JOIN CD_MID_MST AS B
					ON B.MID_CODE = A.MID_CODE
				INNER JOIN CD_LRG_MST AS C
					ON C.LRG_CODE = B.LRG_CODE											
				LEFT OUTER JOIN TBL_COMM_CD_MST AS D
					ON D.CD_CL = 'ITM_GB' AND D.CD_ID = A.ITM_GB				
				LEFT OUTER JOIN TBL_COMM_CD_MST AS E
					ON E.CD_CL = 'ITM_FORM' AND E.CD_ID = A.ITM_FORM
				LEFT OUTER JOIN TBL_COMM_CD_MST AS F
					ON F.CD_CL = 'GRE_GB' AND F.CD_ID = A.GRE_GB
				LEFT OUTER JOIN (
									SELECT A.SCAN_CODE
									     , A.CUR_INV_QTY
										 , ISNULL(C.CUR_INV_QTY, 0) AS BOX_EACH_QTY
										FROM IV_PRODUCT_STAT AS A
										LEFT OUTER JOIN CD_BOX_MST AS B ON A.ITM_CODE = B.BOX_CODE
										LEFT OUTER JOIN IV_PRODUCT_STAT AS C ON B.ITM_CODE = C.ITM_CODE
								) AS G
					ON A.SCAN_CODE = G.SCAN_CODE
				LEFT OUTER JOIN (
									SELECT B.SCAN_CODE
										 , SUM(B.ORD_QTY) AS NOT_DELIVERY_QTY
										 , SUM(B.ORD_QTY * ISNULL(C.IPSU_QTY, 0)) AS BOX_EACH_NOT_DELIVERY_QTY
										FROM PO_ORDER_HDR AS A
										INNER JOIN PO_ORDER_DTL B ON A.ORD_NO = B.ORD_NO
										LEFT OUTER JOIN (
															SELECT B.SCAN_CODE
																 , A.IPSU_QTY
																FROM CD_BOX_MST AS A
																INNER JOIN CD_PRODUCT_CMN AS B ON A.BOX_CODE = B.ITM_CODE
										) AS C ON B.SCAN_CODE = C.SCAN_CODE
									   WHERE A.ORD_STAT IN (SELECT CD_ID 
																FROM TBL_COMM_CD_MST 
															   WHERE CD_CL = 'AVL_INV_STAT')
									   GROUP BY B.SCAN_CODE
								) AS H
					ON A.SCAN_CODE = H.SCAN_CODE

					
		 WHERE (A.ITM_CODE = (CASE WHEN @P_ITM_NAME <> '' THEN @P_ITM_NAME ELSE A.ITM_CODE END) 
					OR A.ITM_NAME LIKE '%' + (CASE WHEN @P_ITM_NAME <> '' THEN @P_ITM_NAME ELSE A.ITM_NAME END) + '%'
					OR A.SCAN_CODE = (CASE WHEN @P_ITM_NAME <> '' THEN @P_ITM_NAME ELSE A.SCAN_CODE END))				
					
					AND IIF(A.GRE_GB IS NULL, '', A.GRE_GB) = (CASE WHEN @P_GRE_GB <> ''  THEN @P_GRE_GB ELSE IIF(A.GRE_GB IS NULL, '', A.GRE_GB) END)
					AND IIF(A.ITM_GB IS NULL, '', A.ITM_GB) = (CASE WHEN @P_ITM_GB <> ''  THEN @P_ITM_GB ELSE IIF(A.ITM_GB IS NULL, '', A.ITM_GB) END)			
					AND IIF(A.MID_CODE IS NULL, '', A.MID_CODE) = (CASE WHEN @P_MID_CODE <> ''  THEN @P_MID_CODE ELSE IIF(A.MID_CODE IS NULL, '', A.MID_CODE) END)			
					AND IIF(A.ITM_FORM IS NULL, '', A.ITM_FORM) = (CASE WHEN @P_ITM_FORM <> ''  THEN @P_ITM_FORM ELSE IIF(A.ITM_FORM IS NULL, '', A.ITM_FORM) END)			
					
			ORDER BY A.IDATE DESC
	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

