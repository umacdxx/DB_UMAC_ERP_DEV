/*
-- 생성자 :	강세미
-- 등록일 :	2024.01.18
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 배송지 정보 저장
-- 실행문 : EXEC PR_PARTNER_DELIVERY_PUT 'UM20126','','','상위배송지테스트2','1',0,2,'Y',0,'12345','주소','상세주소','담당자','01012341234','01099999999','','','admin'
-- 실행문 : EXEC PR_PARTNER_DELIVERY_PUT 'UM20126','','1260101','덕평센터','1',0,1,'Y',0,'17385','경기도 이천시 마장면 이치리 701','','이인수','','01087002913','','','admin'
*/
CREATE PROCEDURE [dbo].[PR_PARTNER_DELIVERY_PUT]
	@P_VEN_CODE NVARCHAR(7),			-- 거래처코드
	@P_UP_CODE NVARCHAR(2), 			-- 상위코드
	@P_DELIVERY_CODE NVARCHAR(7), 	-- 배송지코드
	@P_DELIVERY_NAME NVARCHAR(20),	-- 배송지명
	@P_DELIVERY_GB NVARCHAR(1),		-- 배송지구분
	@P_SORT_ORDER INT, 					-- 정렬순서
	@P_USE_YN NVARCHAR(1), 				-- 사용여부
	@P_POST_NO NVARCHAR(5), 			-- 우편번호
	@P_ADDR NVARCHAR(100), 				-- 주소
	@P_ADDR_DTL NVARCHAR(50), 			-- 상세주소
	@P_CHRG_NAME NVARCHAR(20), 		-- 담당자명
	@P_TEL_NO NVARCHAR(14), 			-- 전화번호
	@P_MOBIL_NO NVARCHAR(11), 			-- 휴대폰번호
	@P_EMAIL NVARCHAR(50), 				-- 이메일
	@P_FAX_NO NVARCHAR(14), 			-- 팩스번호
	@P_TRANS_GB NVARCHAR(1),		   -- 운송구분
	@P_TRANS_SECTION NVARCHAR(6),		-- 운송구간
	@P_EMP_ID NVARCHAR(20)				-- 아이디
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	DECLARE @DELIVERY_CODE_YN NVARCHAR(1) = 'N'	-- 배송지코드 유무
	DECLARE @NEW_DELIVERY_CODE NVARCHAR(7) = 'N'	-- 신규 배송지코드
	DECLARE @UP_CODE NVARCHAR(2)						-- 상위 배송지코드
	DECLARE @RETURN_CODE INT = 0						-- 리턴코드
	DECLARE @RETURN_MESSAGE NVARCHAR(20) = ''		-- 리턴메시지
	DECLARE @DELIVERY_PRICE_SEQ INT					-- 운송비관리 SEQ
	DECLARE @P_MOBIL_NO_ENCRYPT VARBINARY(256)

	BEGIN TRY
	EXEC UMAC_CERT_OPEN_KEY; -- OPEN
		SET @P_MOBIL_NO_ENCRYPT = DBO.GET_ENCRYPT(@P_MOBIL_NO);
		
		SELECT @DELIVERY_PRICE_SEQ = ISNULL(SEQ, '')
		  FROM CD_DELIVERY_PRICE 
		 WHERE TRANS_GB = @P_TRANS_GB AND TRANS_SECTION = @P_TRANS_SECTION

		IF @P_UP_CODE = '' OR @P_UP_CODE IS NULL
			BEGIN
				-- 상위 코드가 없을 때 거래처코드+MAX값+01로 새로 생성
				 SELECT @UP_CODE = ISNULL(MAX(SUBSTRING(DELIVERY_CODE,4,2)) + 1, '01')
				   FROM CD_PARTNER_DELIVERY
				  WHERE VEN_CODE = @P_VEN_CODE
				  
				 IF LEN(@UP_CODE) = 1
					BEGIN
						SET @UP_CODE = CONCAT(0, @UP_CODE)
					END

				  SET @NEW_DELIVERY_CODE = CONCAT(RIGHT(@P_VEN_CODE, 3), @UP_CODE, '01')
				  
			END
		ELSE
			BEGIN
				-- 상위 코드가 있을 때 거래처코드+상위코드+MAX값으로 새로 생성
				SELECT @NEW_DELIVERY_CODE = MAX(RIGHT(DELIVERY_CODE,2)) + 1
				   FROM CD_PARTNER_DELIVERY
				  WHERE VEN_CODE = @P_VEN_CODE AND SUBSTRING(DELIVERY_CODE, 4, 2) = @P_UP_CODE

				  IF LEN(@NEW_DELIVERY_CODE) = 1
					BEGIN
						SET @NEW_DELIVERY_CODE = CONCAT(0, @NEW_DELIVERY_CODE)
					END
				  
				  SET @NEW_DELIVERY_CODE = CONCAT(RIGHT(@P_VEN_CODE, 3), @P_UP_CODE, @NEW_DELIVERY_CODE)

			END
				PRINT(@NEW_DELIVERY_CODE)

		MERGE INTO CD_PARTNER_DELIVERY AS A
		USING (SELECT 1 AS CD_PARTNER_DELIVERY) AS B
		ON (A.VEN_CODE = @P_VEN_CODE AND A.DELIVERY_CODE = @P_DELIVERY_CODE)
		WHEN MATCHED THEN
		UPDATE SET DELIVERY_NAME = @P_DELIVERY_NAME,
					  DELIVERY_GB = @P_DELIVERY_GB,
					  SORT_ORDER = @P_SORT_ORDER,
					  POST_NO = @P_POST_NO,
					  ADDR = @P_ADDR,
					  ADDR_DTL = @P_ADDR_DTL,
					  CHRG_NAME = @P_CHRG_NAME,
					  TEL_NO = @P_TEL_NO,
					  --MOBIL_NO = @P_MOBIL_NO,
					  MOBIL_NO = @P_MOBIL_NO_ENCRYPT,
					  EMAIL = @P_EMAIL,
					  FAX_NO = @P_FAX_NO,
					  DELIVERY_PRICE_SEQ = @DELIVERY_PRICE_SEQ,
					  USE_YN = @P_USE_YN,
					  UDATE = GETDATE(),
					  UEMP_ID = @P_EMP_ID
		WHEN NOT MATCHED THEN
		INSERT (
				  VEN_CODE,
				  DELIVERY_CODE,
				  DELIVERY_NAME,
				  DELIVERY_GB,
				  SORT_ORDER, 
				  POST_NO,
				  ADDR,
				  ADDR_DTL,
				  CHRG_NAME,
				  TEL_NO,
				  MOBIL_NO,
				  EMAIL,
				  FAX_NO,
				  USE_YN,
				  DELIVERY_PRICE_SEQ,
				  IDATE,
				  IEMP_ID 
				  ) VALUES (
				  @P_VEN_CODE,
				  @NEW_DELIVERY_CODE,
				  @P_DELIVERY_NAME,
				  @P_DELIVERY_GB,
				  @P_SORT_ORDER,
				  @P_POST_NO,
				  @P_ADDR,
				  @P_ADDR_DTL,
				  @P_CHRG_NAME,
				  @P_TEL_NO,
				  --@P_MOBIL_NO,
				  @P_MOBIL_NO_ENCRYPT,
				  @P_EMAIL,
				  @P_FAX_NO,
				  @P_USE_YN, 
				  @DELIVERY_PRICE_SEQ,
				  GETDATE(),
				  @P_EMP_ID
				  );

		SET @RETURN_CODE = 0 -- 저장완료
		SET @RETURN_MESSAGE = DBO.GET_ERR_MSG('0')
	EXEC UMAC_CERT_CLOSE_KEY -- CLOSE
	END TRY
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	

		SET @RETURN_CODE = -1 -- 저장실패
		SET @RETURN_MESSAGE = DBO.GET_ERR_MSG('-1')
	END CATCH
	
	
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE, @NEW_DELIVERY_CODE AS DELIVERY_CODE
END

GO

