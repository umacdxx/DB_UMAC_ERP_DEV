-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[PR_PRODUCT_LOT_LIST_POPUP]
(

	@P_SCAN_CODE		NVARCHAR(14) = '',		-- 상품명(코드)
	@P_LOT_NO			NVARCHAR(30) = '',		-- LOT_NO
	@P_PROD_FROM_DT		NVARCHAR(8) = '',		-- FROM 생산기간
	@P_PROD_TO_DT		NVARCHAR(8) = '',		-- TO 생산기간
	@P_SEARCH_DT		NVARCHAR(8) = '',		-- 검색일자
	@P_SEARCH_DT_GB		NVARCHAR(1) = ''		-- 검색일자 구분 (0:소비기한, 1:생산일자)
)
AS
BEGIN
	BEGIN TRY

		DECLARE @V_SCAN_CODE NVARCHAR(14), @V_ITM_CODE NVARCHAR(7), @V_ITM_FORM NVARCHAR(1), @V_EACH_CODE NVARCHAR(14);

		SELECT @V_SCAN_CODE = A.SCAN_CODE
		     , @V_ITM_CODE = A.ITM_CODE
			 , @V_ITM_FORM = A.ITM_FORM
			 , @V_EACH_CODE = C.SCAN_CODE
			FROM CD_PRODUCT_CMN AS A
			LEFT OUTER JOIN CD_BOX_MST AS B ON A.ITM_CODE = B.BOX_CODE
			LEFT OUTER JOIN CD_PRODUCT_CMN AS C ON B.ITM_CODE = C.ITM_CODE
		   WHERE A.SCAN_CODE = @P_SCAN_CODE

		;

		IF @V_ITM_FORM = '2' AND @V_EACH_CODE IS NOT NULL
		BEGIN
			SET @V_SCAN_CODE = @V_EACH_CODE;
		END
		
		SELECT A.SCAN_CODE
			 , C.ITM_NAME
			 , B.PROD_DT
			 , A.LOT_NO
			 , A.CUR_INV_QTY
			 , C.WEIGHT_GB
		  FROM IV_LOT_STAT AS A
		  LEFT OUTER JOIN CD_LOT_MST AS B ON A.SCAN_CODE = B.SCAN_CODE AND A.LOT_NO = B.LOT_NO
	     INNER JOIN CD_PRODUCT_CMN AS C ON A.SCAN_CODE = C.SCAN_CODE
		 WHERE 1 = CASE 
					WHEN @P_PROD_FROM_DT <> '' AND B.PROD_DT BETWEEN @P_PROD_FROM_DT AND @P_PROD_TO_DT THEN 1
					WHEN @P_PROD_FROM_DT = '' AND @P_SEARCH_DT_GB = '0' AND B.EXPIRATION_DT = @P_SEARCH_DT THEN 1
					WHEN @P_PROD_FROM_DT = '' AND @P_SEARCH_DT_GB = '1' AND B.PROD_DT = @P_SEARCH_DT THEN 1
					ELSE 0
				END
			AND 1=(CASE WHEN @V_SCAN_CODE = '' THEN 1 WHEN @V_SCAN_CODE != '' AND A.SCAN_CODE = @V_SCAN_CODE THEN 1 ELSE 2 END)
			AND 1=(CASE WHEN @P_LOT_NO = '' THEN 1 WHEN @P_LOT_NO != '' AND A.LOT_NO LIKE '%'+@P_LOT_NO+'%' THEN 1 ELSE 2 END)
			AND C.ITM_FORM != '3'
		  ORDER BY CASE WHEN A.LOT_NO LIKE '11111111%' THEN 0 ELSE 1 END
		;

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
END

GO

