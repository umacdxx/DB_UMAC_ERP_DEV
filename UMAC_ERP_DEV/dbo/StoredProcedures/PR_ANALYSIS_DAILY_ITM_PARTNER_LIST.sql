/*
-- 생성자 :	윤현빈
-- 등록일 :	2024.10.28
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 품목/거래처 일보
-- 실행문 : EXEC PR_ANALYSIS_DAILY_ITM_PARTNER_LIST '20241001','20241029','','120002','N','1'
*/
CREATE PROCEDURE [dbo].[PR_ANALYSIS_DAILY_ITM_PARTNER_LIST]
( 
	@P_REPORT_FROM_DATE		NVARCHAR(8) = '',	-- from
	@P_REPORT_TO_DATE		NVARCHAR(8) = '',	-- to
	@P_GRE_GB				NVARCHAR(1) = '',	-- 매출입 구분 (1: 매출, 2: 매입)
	@P_SCAN_CODE			NVARCHAR(14) = '',	-- 제품코드
	@P_VEN_CODE				NVARCHAR(7) = '',	-- 거래처코드
	@P_MON_RESULT_YN		NVARCHAR(1) = '',	-- 월계 여부
	@P_ITM_GB				NVARCHAR(1) = '',	-- 제품 구분
	@P_TAB_INDEX			NVARCHAR(1) = ''	-- 탭 인덱스
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	BEGIN TRY 	
----------------------------------------------------
-- 품목 조회
----------------------------------------------------
		IF @P_TAB_INDEX = '1'
		BEGIN
			WITH W_DATA AS (
				SELECT '매출' AS GRE_GB
					 , A.DELIVERY_DEC_DT AS REPORT_DATE
					 , C.CAR_NO
					 , B.SCAN_CODE
					 , A.VEN_CODE
					 , D.DELIVERY_NAME
					 , ISNULL(C.NET_WGHT, 0) AS NET_WGHT
					 , ISNULL(C.OFFICIAL_WGHT, 0) AS OFFICIAL_WGHT
					 , CASE WHEN ISNULL(C.OFFICIAL_WGHT, 0) = 0 THEN 0 ELSE ISNULL(C.NET_WGHT, 0) - ISNULL(C.OFFICIAL_WGHT, 0) END AS DIFF_WGHT
					 , B.PICKING_QTY AS QTY
					 , E.REMARKS
					FROM PO_ORDER_HDR AS A
					INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
					INNER JOIN PO_SCALE AS C ON A.ORD_NO = C.ORD_NO
					LEFT OUTER JOIN CD_PARTNER_DELIVERY AS D ON A.VEN_CODE = D.VEN_CODE AND A.DELIVERY_CODE = D.DELIVERY_CODE
					LEFT OUTER JOIN RP_ANALYSIS_ITM_PARTNER AS E ON A.DELIVERY_DEC_DT = E.REPORT_DATE AND B.SCAN_CODE = E.SCAN_CODE AND A.VEN_CODE = E.VEN_CODE AND ISNULL(C.CAR_NO, '') = ISNULL(E.CAR_NO, '')
				   WHERE 1=(CASE WHEN @P_GRE_GB = '' THEN 1 WHEN @P_GRE_GB != '' AND @P_GRE_GB  = '1' THEN 1 ELSE 2 END)
				     AND 1=(CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE != '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 2 END)
				     AND A.DELIVERY_DEC_DT BETWEEN @P_REPORT_FROM_DATE AND @P_REPORT_TO_DATE
				     AND A.ORD_STAT IN ('35', '40')
				UNION ALL
				SELECT '매입' AS GRE_GB
					 , A.DELIVERY_IN_DT AS REPORT_DATE
					 , C.CAR_NO
					 , B.SCAN_CODE
					 , A.VEN_CODE
					 , D.DELIVERY_NAME
					 , ISNULL(C.NET_WGHT, 0) AS NET_WGHT
					 , ISNULL(C.OFFICIAL_WGHT, 0) AS OFFICIAL_WGHT
					 , CASE WHEN ISNULL(C.OFFICIAL_WGHT, 0) = 0 THEN 0 ELSE ISNULL(C.NET_WGHT, 0) - ISNULL(C.OFFICIAL_WGHT, 0) END AS DIFF_WGHT
					 , B.PUR_QTY AS QTY
					 , E.REMARKS
					FROM PO_PURCHASE_HDR AS A
					INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
					INNER JOIN PO_SCALE AS C ON A.ORD_NO = C.ORD_NO
					LEFT OUTER JOIN CD_PARTNER_DELIVERY AS D ON A.VEN_CODE = D.VEN_CODE AND A.DELIVERY_CODE = D.DELIVERY_CODE
					LEFT OUTER JOIN RP_ANALYSIS_ITM_PARTNER AS E ON A.DELIVERY_IN_DT = E.REPORT_DATE AND B.SCAN_CODE = E.SCAN_CODE AND A.VEN_CODE = E.VEN_CODE AND ISNULL(C.CAR_NO, '') = ISNULL(E.CAR_NO, '')
				   WHERE 1=(CASE WHEN @P_GRE_GB = '' THEN 1 WHEN @P_GRE_GB != '' AND @P_GRE_GB  = '2' THEN 1 ELSE 2 END)
				     AND 1=(CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE != '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 2 END)
				     AND A.DELIVERY_IN_DT BETWEEN @P_REPORT_FROM_DATE AND @P_REPORT_TO_DATE
				     AND A.PUR_STAT IN ('35', '40')
			), W_ACCUM AS (
				SELECT A.*
					 , SUM(A.NET_WGHT) OVER(PARTITION BY A.SCAN_CODE ORDER BY A.GRE_GB, A.REPORT_DATE, A.CAR_NO, A.SCAN_CODE,  A.VEN_CODE) AS ACCUM_NET_WGHT
					 , SUM(A.OFFICIAL_WGHT) OVER(PARTITION BY A.SCAN_CODE ORDER BY A.GRE_GB, A.REPORT_DATE, A.CAR_NO, A.SCAN_CODE, A.VEN_CODE) AS ACCUM_OFFICIAL_WGHT
					FROM W_DATA AS A

			), W_ROLLUP AS (
				SELECT A.GRE_GB
					 , A.SCAN_CODE
					 , SUM(A.QTY) AS QTY
					 , SUM(A.NET_WGHT) AS ACCUM_NET_WGHT
					 , SUM(A.OFFICIAL_WGHT) AS ACCUM_OFFICIAL_WGHT
					FROM W_ACCUM AS A
				   GROUP BY ROLLUP (A.GRE_GB, A.SCAN_CODE)
			), W_RESULT AS (
				SELECT GRE_GB
					 , REPORT_DATE AS REPORT_DATE
					 , ISNULL(CAR_NO, '') AS CAR_NO
					 , SCAN_CODE
					 , VEN_CODE
					 , DELIVERY_NAME
					 , NET_WGHT
					 , OFFICIAL_WGHT
					 , DIFF_WGHT
					 , QTY
					 , ACCUM_NET_WGHT
					 , ACCUM_OFFICIAL_WGHT
					 , ISNULL(REMARKS, '') AS REMARKS
					 , 1 AS DATA_TYPE
					FROM W_ACCUM
				UNION ALL
				SELECT GRE_GB
					 , '' AS REPORT_DATE
					 , '' AS CAR_NO
					 , SCAN_CODE
					 , '' AS VEN_CODE
					 , '' AS DELIVERY_NAME
					 , 0 AS NET_WGHT
					 , 0 AS OFFICIAL_WGHT
					 , 0 AS DIFF_WGHT
					 , QTY
					 , ACCUM_NET_WGHT
					 , ACCUM_OFFICIAL_WGHT
					 , '' AS REMARKS
					 , CASE WHEN SCAN_CODE IS NULL THEN -1 ELSE 3 END AS DATA_TYPE
					FROM W_ROLLUP
				   WHERE GRE_GB IS NOT NULL
			)	
		    SELECT A.GRE_GB
			     , A.REPORT_DATE
			     , A.CAR_NO
			     , ISNULL(B.ITM_NAME, '') AS ITM_NAME
			     , ISNULL(C.VEN_NAME, '') AS VEN_NAME
			     , A.DELIVERY_NAME
			     , A.NET_WGHT
			     , A.OFFICIAL_WGHT
			     , A.DIFF_WGHT
			     , CAST(A.QTY AS INT) AS QTY
			     , A.ACCUM_NET_WGHT
			     , A.ACCUM_OFFICIAL_WGHT
			     , A.REMARKS
			     , ISNULL(B.WEIGHT_GB, 'QTY') AS WEIGHT_GB
			     , A.DATA_TYPE
				 , A.SCAN_CODE
				 , A.VEN_CODE
				FROM W_RESULT AS A
				LEFT OUTER JOIN CD_PRODUCT_CMN AS B ON A.SCAN_CODE = B.SCAN_CODE
				LEFT OUTER JOIN CD_PARTNER_MST AS C ON A.VEN_CODE = C.VEN_CODE
			   WHERE A.DATA_TYPE != -1
			     AND 1=(CASE WHEN @P_ITM_GB = '' THEN 1 WHEN @P_ITM_GB != '' AND B.ITM_GB = @P_ITM_GB THEN 1 ELSE 2 END)
			   ORDER BY A.GRE_GB, (CASE WHEN A.SCAN_CODE IS NULL THEN 1 ELSE 0 END), B.ITM_NAME, A.DATA_TYPE

		END

----------------------------------------------------
-- 거래처 조회
----------------------------------------------------
		ELSE IF @P_TAB_INDEX = '2'
		BEGIN

			WITH W_DATA AS (
				SELECT '매출' AS GRE_GB
					 , A.DELIVERY_DEC_DT AS REPORT_DATE
					 , SUBSTRING(A.DELIVERY_DEC_DT, 5, 2) AS MON
					 , C.CAR_NO
					 , B.SCAN_CODE
					 , A.VEN_CODE
					 , D.DELIVERY_NAME
					 , ISNULL(C.NET_WGHT, 0) AS NET_WGHT
					 , ISNULL(C.OFFICIAL_WGHT, 0) AS OFFICIAL_WGHT
					 , CASE WHEN ISNULL(C.OFFICIAL_WGHT, 0) = 0 THEN 0 ELSE ISNULL(C.NET_WGHT, 0) - ISNULL(C.OFFICIAL_WGHT, 0) END AS DIFF_WGHT
					 , B.PICKING_QTY AS QTY
					 , E.REMARKS
					FROM PO_ORDER_HDR AS A
					INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
					INNER JOIN PO_SCALE AS C ON A.ORD_NO = C.ORD_NO
					LEFT OUTER JOIN CD_PARTNER_DELIVERY AS D ON A.VEN_CODE = D.VEN_CODE AND A.DELIVERY_CODE = D.DELIVERY_CODE
					LEFT OUTER JOIN RP_ANALYSIS_ITM_PARTNER AS E ON A.DELIVERY_DEC_DT = E.REPORT_DATE AND B.SCAN_CODE = E.SCAN_CODE AND A.VEN_CODE = E.VEN_CODE AND ISNULL(C.CAR_NO, '') = ISNULL(E.CAR_NO, '')
				   WHERE 1=(CASE WHEN @P_GRE_GB = '' THEN 1 WHEN @P_GRE_GB != '' AND @P_GRE_GB  = '1' THEN 1 ELSE 2 END)
				     AND 1=(CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN @P_VEN_CODE != '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 2 END)
				     AND A.DELIVERY_DEC_DT BETWEEN @P_REPORT_FROM_DATE AND @P_REPORT_TO_DATE
				     AND A.ORD_STAT IN ('35', '40')
				UNION ALL
				SELECT '매입' AS GRE_GB
					 , A.DELIVERY_IN_DT AS REPORT_DATE
					 , SUBSTRING(A.DELIVERY_IN_DT, 5, 2) AS MON
					 , C.CAR_NO
					 , B.SCAN_CODE
					 , A.VEN_CODE
					 , D.DELIVERY_NAME
					 , ISNULL(C.NET_WGHT, 0) AS NET_WGHT
					 , ISNULL(C.OFFICIAL_WGHT, 0) AS OFFICIAL_WGHT
					 , CASE WHEN ISNULL(C.OFFICIAL_WGHT, 0) = 0 THEN 0 ELSE ISNULL(C.NET_WGHT, 0) - ISNULL(C.OFFICIAL_WGHT, 0) END AS DIFF_WGHT
					 , B.PUR_QTY AS QTY
					 , E.REMARKS
					FROM PO_PURCHASE_HDR AS A
					INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
					INNER JOIN PO_SCALE AS C ON A.ORD_NO = C.ORD_NO
					LEFT OUTER JOIN CD_PARTNER_DELIVERY AS D ON A.VEN_CODE = D.VEN_CODE AND A.DELIVERY_CODE = D.DELIVERY_CODE
					LEFT OUTER JOIN RP_ANALYSIS_ITM_PARTNER AS E ON A.DELIVERY_IN_DT = E.REPORT_DATE AND B.SCAN_CODE = E.SCAN_CODE AND A.VEN_CODE = E.VEN_CODE AND ISNULL(C.CAR_NO, '') = ISNULL(E.CAR_NO, '')
				   WHERE 1=(CASE WHEN @P_GRE_GB = '' THEN 1 WHEN @P_GRE_GB != '' AND @P_GRE_GB  = '2' THEN 1 ELSE 2 END)
				     AND 1=(CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN @P_VEN_CODE != '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 2 END)
				     AND A.DELIVERY_IN_DT BETWEEN @P_REPORT_FROM_DATE AND @P_REPORT_TO_DATE
				     AND A.PUR_STAT IN ('35', '40')
			), W_ACCUM AS (
				SELECT A.*
					 , SUM(A.NET_WGHT) OVER(PARTITION BY A.VEN_CODE, A.SCAN_CODE ORDER BY A.GRE_GB, A.REPORT_DATE, A.CAR_NO, A.SCAN_CODE,  A.VEN_CODE) AS ACCUM_NET_WGHT
					 , SUM(A.OFFICIAL_WGHT) OVER(PARTITION BY A.VEN_CODE, A.SCAN_CODE ORDER BY A.GRE_GB, A.REPORT_DATE, A.CAR_NO, A.SCAN_CODE, A.VEN_CODE) AS ACCUM_OFFICIAL_WGHT
					FROM W_DATA AS A

			), W_ROLLUP_MON AS (
				SELECT A.GRE_GB
				     , A.MON
				     , A.VEN_CODE
					 , A.SCAN_CODE
					 , SUM(A.QTY) AS QTY
					 , SUM(A.NET_WGHT) AS ACCUM_NET_WGHT
					 , SUM(A.OFFICIAL_WGHT) AS ACCUM_OFFICIAL_WGHT
					FROM W_ACCUM AS A
				   GROUP BY ROLLUP (A.GRE_GB, A.MON, A.VEN_CODE, A.SCAN_CODE)
			), W_ROLLUP AS (
				SELECT A.GRE_GB
				     , A.VEN_CODE
					 , A.SCAN_CODE
					 , SUM(A.QTY) AS QTY
					 , SUM(A.NET_WGHT) AS ACCUM_NET_WGHT
					 , SUM(A.OFFICIAL_WGHT) AS ACCUM_OFFICIAL_WGHT
					FROM W_ACCUM AS A
				   GROUP BY ROLLUP (A.GRE_GB, A.VEN_CODE, A.SCAN_CODE)
			), W_RESULT AS (
				SELECT GRE_GB
					 , REPORT_DATE AS REPORT_DATE
					 , MON
					 , ISNULL(CAR_NO, '') AS CAR_NO
					 , SCAN_CODE
					 , VEN_CODE
					 , DELIVERY_NAME
					 , NET_WGHT
					 , OFFICIAL_WGHT
					 , DIFF_WGHT
					 , QTY
					 , ACCUM_NET_WGHT
					 , ACCUM_OFFICIAL_WGHT
					 , ISNULL(REMARKS, '') AS REMARKS
					 , 1 AS DATA_TYPE
					FROM W_ACCUM
				UNION ALL
				SELECT GRE_GB
					 , '' AS REPORT_DATE
					 , MON
					 , '' AS CAR_NO
					 , SCAN_CODE
					 , VEN_CODE
					 , '' AS DELIVERY_NAME
					 , 0 AS NET_WGHT
					 , 0 AS OFFICIAL_WGHT
					 , 0 AS DIFF_WGHT
					 , QTY
					 --, ACCUM_NET_WGHT
					 --, ACCUM_OFFICIAL_WGHT
					 , '' AS ACCUM_NET_WGHT
					 , '' AS ACCUM_OFFICIAL_WGHT
					 , '' AS REMARKS
					 , CASE WHEN VEN_CODE IS NOT NULL AND SCAN_CODE IS NOT NULL THEN 2 else -1 END AS DATA_TYPE
					FROM W_ROLLUP_MON
				   WHERE 1=(CASE WHEN @P_MON_RESULT_YN = 'Y' THEN 1 ELSE 0 END)
				UNION ALL
				SELECT GRE_GB
					 , '' AS REPORT_DATE
					 , '99' AS MON
					 , '' AS CAR_NO
					 , SCAN_CODE
					 , VEN_CODE
					 , '' AS DELIVERY_NAME
					 , 0 AS NET_WGHT
					 , 0 AS OFFICIAL_WGHT
					 , 0 AS DIFF_WGHT
					 , QTY
					 --, ACCUM_NET_WGHT
					 --, ACCUM_OFFICIAL_WGHT
					 , '' AS ACCUM_NET_WGHT
					 , '' AS ACCUM_OFFICIAL_WGHT
					 , '' AS REMARKS
					 , CASE WHEN VEN_CODE IS NOT NULL AND SCAN_CODE IS NOT NULL THEN 3 else -1 END AS DATA_TYPE
					FROM W_ROLLUP
				   WHERE GRE_GB IS NOT NULL
			)	
		    SELECT A.GRE_GB
			     , A.REPORT_DATE
			     , A.CAR_NO
			     , ISNULL(C.VEN_NAME, '') AS VEN_NAME
			     , CASE WHEN A.DATA_TYPE = '2' THEN  CONCAT(A.MON, '월 소계') ELSE ISNULL(B.ITM_NAME, '') END AS ITM_NAME
			     , A.DELIVERY_NAME
			     , A.NET_WGHT
			     , A.OFFICIAL_WGHT
			     , A.DIFF_WGHT
			     , CAST(A.QTY AS INT) AS QTY
			     , A.ACCUM_NET_WGHT
			     , A.ACCUM_OFFICIAL_WGHT
			     , A.REMARKS
			     , ISNULL(B.WEIGHT_GB, 'QTY') AS WEIGHT_GB
			     , A.DATA_TYPE
				 , A.SCAN_CODE
				 , A.VEN_CODE
				FROM W_RESULT AS A
				LEFT OUTER JOIN CD_PRODUCT_CMN AS B ON A.SCAN_CODE = B.SCAN_CODE
				LEFT OUTER JOIN CD_PARTNER_MST AS C ON A.VEN_CODE = C.VEN_CODE
			   WHERE A.DATA_TYPE != -1
			     AND 1=(CASE WHEN @P_ITM_GB = '' THEN 1 WHEN @P_ITM_GB != '' AND B.ITM_GB = @P_ITM_GB THEN 1 ELSE 2 END)
			   ORDER BY A.GRE_GB, C.VEN_NAME, B.ITM_NAME, A.MON, A.DATA_TYPE
		END

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

