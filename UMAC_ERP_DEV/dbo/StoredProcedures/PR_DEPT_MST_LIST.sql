/*
-- 생성자 :	이동호
-- 등록일 :	2023.12.28
-- 수정자 : -
-- 수정일 : - 
-- 설 명  :  조직마스터 리스트 출력 : 리스트(JSON, LIST), 상세정보
-- 실행문 : 
EXEC PR_DEPT_MST_LIST '', 'LIST'
*/
CREATE PROCEDURE [dbo].[PR_DEPT_MST_LIST]
(
	@P_DEPT_CODE	NVARCHAR(25) = '',			-- 조직코드
	@P_LIST_TYPE	NVARCHAR(25) = 'JSON'		-- JSON, LIST
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	SET @P_DEPT_CODE = IIF(@P_DEPT_CODE IS NULL, '', @P_DEPT_CODE)
	
	BEGIN TRY 	
		
		IF @P_DEPT_CODE = '' 	
		BEGIN
		-- # 조직 리스트 # 

			IF @P_LIST_TYPE = 'LIST' 
			BEGIN
					-- 조직도 LIST 형식으로 출력
					WITH TEMP_TBL
					AS (
						SELECT 
							DEPT_CODE,
							DEPT_NAME,
							UPPER_DEPT,     
							GRADE,
							SORT_ORDER,
							DOUZONE_DEPT_CD,
							USE_YN,
							CONVERT(VARCHAR(50), DEPT_CODE) AS SORT
							--CAST(DEPT_CODE AS VARCHAR) AS SORT2,
							--CONVERT(NVARCHAR(255), DEPT_NAME) DEPT_NAME_LOC
						FROM TBL_DEPT_MST
						WHERE  UPPER_DEPT = 0
						UNION ALL
						SELECT 
							DM.DEPT_CODE,
							DM.DEPT_NAME,
							DM.UPPER_DEPT,
							DM.GRADE,
							DM.SORT_ORDER,
							DM.DOUZONE_DEPT_CD,
							DM.USE_YN,
							CONVERT(VARCHAR(50), CONVERT(NVARCHAR, TT.SORT) + N' > ' + CONVERT(VARCHAR(255), dbo.FN_DEPT_CODE_SORT_CH(DM.DEPT_CODE,DM.SORT_ORDER))) SORT
							--CONVERT(VARCHAR(255), CONVERT(NVARCHAR, C.SORT2) + N' > ' + CONVERT(VARCHAR(255), B.DEPT_CODE)) SORT2,		
							--CONVERT(NVARCHAR(255), CONVERT(NVARCHAR, C.DEPT_NAME_LOC) + N' > ' + CONVERT(NVARCHAR(255), B.DEPT_NAME))  DEPT_NAME_LOC
						FROM TBL_DEPT_MST AS DM,
							TEMP_TBL AS TT
						WHERE  DM.UPPER_DEPT = TT.DEPT_CODE
					)
					SELECT DEPT_CODE,
							DEPT_NAME,
							UPPER_DEPT,     
							GRADE,
							SORT_ORDER,
							DOUZONE_DEPT_CD,
							USE_YN			
					FROM TEMP_TBL ORDER  BY SORT


			END
			ELSE
			BEGIN
				-- 조직도 TREE 구조 JSON 형식으로 출력
				SELECT dbo.FN_DEPT_MST_TREE_JSON(0, NULL, 0) AS RETURN_JSON;
			END
		END
		ELSE
		BEGIN
		-- # 조직 상세 정보 # 

			DECLARE @LOW_DEPT_CODE NVARCHAR(25)
			DECLARE @LOW_SORT_ORDER INT = 0
			
			-- 하위조직도 생성 코드 및 정렬순서 셋팅
			SELECT @LOW_DEPT_CODE = (IIF(_DEPT_CODE IS NULL, @P_DEPT_CODE + '01', _DEPT_CODE)), 
				@LOW_SORT_ORDER = (IIF(_SORT_ORDER IS NULL, 1, _SORT_ORDER))
			FROM (
				SELECT 
					(	CASE LEN(_DEPT_CODE)  
							WHEN 3 THEN '0' + _DEPT_CODE 
							WHEN 5 THEN '0' + _DEPT_CODE
							WHEN 7 THEN '0' + _DEPT_CODE
						ELSE _DEPT_CODE
						END 
					) AS _DEPT_CODE,
					_SORT_ORDER 
				FROM (
						SELECT CAST(_DEPT_CODE AS VARCHAR) AS _DEPT_CODE, _SORT_ORDER FROM (
							SELECT MAX(DEPT_CODE) + 1 AS _DEPT_CODE, MAX(SORT_ORDER) + 1 AS _SORT_ORDER 
							FROM TBL_DEPT_MST WHERE UPPER_DEPT = @P_DEPT_CODE
					) AS S1
				) AS S2
			) AS S3

			SELECT A.DEPT_CODE, A.DEPT_NAME, A.UPPER_DEPT, A.GRADE, A.SORT_ORDER, A.DOUZONE_DEPT_CD, A.USE_YN,
					IIF(B.DEPT_NAME IS NULL, '', B.DEPT_NAME) AS UPPER_DEPT_NAME,
					@LOW_DEPT_CODE AS LOW_DEPT_CODE,
					@LOW_SORT_ORDER AS LOW_SORT_ORDER
				FROM TBL_DEPT_MST AS A 
					LEFT OUTER JOIN TBL_DEPT_MST AS B 
						ON A.UPPER_DEPT = B.DEPT_CODE														
				WHERE A.DEPT_CODE = @P_DEPT_CODE
		END

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

