
/*

-- 생성자 :	윤현빈
-- 등록일 :	2024.08.29
-- 설 명  : 입고/출고일보
-- 실행문 : 

EXEC PR_ANALYSIS_DAILY_ORD_PUR_CREATE '','','','',''

*/
CREATE PROCEDURE [dbo].[PR_ANALYSIS_DAILY_ORD_PUR_CREATE]
( 
	@P_REPORT_DATE		NVARCHAR(8) = '',
	@P_EMP_ID			NVARCHAR(20)		-- 아이디
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	DECLARE @RETURN_CODE	INT = 0										-- 리턴코드(저장완료)
	DECLARE @RETURN_MESSAGE NVARCHAR(MAX) = DBO.GET_ERR_MSG('0')		-- 리턴메시지
	
	BEGIN TRAN
	BEGIN TRY 

----------------------------------------
-- 1. 입고/출고 일보 (원재료, 부자재) 삽입
----------------------------------------
		CREATE TABLE #TEMP_PUR_DATA (
			REPORT_DATE NVARCHAR(8),
			VEN_CODE NVARCHAR(7),
			SCAN_CODE NVARCHAR(14),
			PUR_QTY NUMERIC(15,2),
			REMARKS NVARCHAR(2000)
		);

		INSERT INTO #TEMP_PUR_DATA (REPORT_DATE, VEN_CODE, SCAN_CODE, PUR_QTY, REMARKS)
		SELECT A.*
			 , B.REMARKS
			FROM (
				SELECT A.DELIVERY_IN_DT AS REPORT_DATE
					 , A.VEN_CODE
					 , C.SCAN_CODE
					 , SUM(B.PUR_QTY) AS PUR_QTY
					FROM PO_PURCHASE_HDR AS A 
					INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
					INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
				   WHERE A.DELIVERY_IN_DT = @P_REPORT_DATE
					 AND A.PUR_STAT IN ('35', '40')
					 AND C.ITM_GB IN ('2', '3')		-- 원재료, 부자재
				   GROUP BY A.DELIVERY_IN_DT, A.VEN_CODE, C.SCAN_CODE
			) AS A
			LEFT OUTER JOIN RP_ANALYSIS_DAILY_PUR AS B ON A.REPORT_DATE = B.REPORT_DATE AND A.VEN_CODE = B.VEN_CODE AND A.SCAN_CODE = B.SCAN_CODE
		;

----------------------------------------
-- 해당일자 삭제
----------------------------------------
		DELETE FROM RP_ANALYSIS_DAILY_PUR WHERE REPORT_DATE = @P_REPORT_DATE;

----------------------------------------
-- 해당일자 일보 생성
----------------------------------------
		INSERT INTO RP_ANALYSIS_DAILY_PUR
		(
			REPORT_DATE
 		  , VEN_CODE
		  , SCAN_CODE
		  , PUR_QTY
		  , REMARKS
		  , IDATE
		  , IEMP_ID
		)
		SELECT A.REPORT_DATE
		     , A.VEN_CODE
		     , A.SCAN_CODE
		     , A.PUR_QTY
		     , A.REMARKS
		     , GETDATE()
		     , @P_EMP_ID
			FROM #TEMP_PUR_DATA AS A
		;

		DROP TABLE #TEMP_PUR_DATA;
----------------------------------------
-- 2. 입고/출고 일보 (제품 출고) 삽입
----------------------------------------

		--CREATE TABLE #TEMP_ORD_DATA (
		--	REPORT_DATE NVARCHAR(8),
		--	VEN_CODE NVARCHAR(7),
		--	DELIVERY_CODE NVARCHAR(7),
		--	SCAN_CODE NVARCHAR(14),
		--	ORD_QTY NUMERIC(15,2)
		--);
		DELETE FROM RP_ANALYSIS_DAILY_ORD WHERE REPORT_DATE = @P_REPORT_DATE;
		
		INSERT INTO RP_ANALYSIS_DAILY_ORD 
		(
			
			REPORT_DATE
 		  , VEN_CODE
		  , DELIVERY_CODE
		  , SCAN_CODE
		  , ORD_QTY
		  , IDATE
		  , IEMP_ID
		)
		SELECT A.DELIVERY_DEC_DT AS REPORT_DATE
			 , A.VEN_CODE
			 , ISNULL(A.DELIVERY_CODE, '')
			 , C.SCAN_CODE
			 , SUM(B.PICKING_QTY) AS ORD_QTY
			 , GETDATE()
			 , @P_EMP_ID
			FROM PO_ORDER_HDR AS A
			INNER JOIN VIEW_ORDER_DTL_SAMPLE_SUM AS B ON A.ORD_NO = B.ORD_NO
			INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
			LEFT OUTER JOIN CD_BOX_MST AS D ON C.ITM_CODE = D.BOX_CODE
			WHERE A.DELIVERY_DEC_DT = @P_REPORT_DATE
		 	  AND A.ORD_STAT IN ('35', '40')
			  --AND C.ITM_GB = '1' -- 제품
			GROUP BY A.DELIVERY_DEC_DT, A.VEN_CODE, A.DELIVERY_CODE, C.SCAN_CODE
		;

	COMMIT;
	END TRY
	
	BEGIN CATCH	
		
		IF @@TRANCOUNT > 0
		BEGIN 
			ROLLBACK TRAN
			SET @RETURN_CODE = -1
			SET @RETURN_MESSAGE = ERROR_MESSAGE()
			
			DROP TABLE IF EXISTS #TEMP_PUR_DATA;

			--에러 로그 테이블 저장
			INSERT INTO TBL_ERROR_LOG 
			SELECT ERROR_PROCEDURE()		-- 프로시저명
				, ERROR_MESSAGE()			-- 에러메시지
				, ERROR_LINE()				-- 에러라인
				, GETDATE()	
		END 
		
		SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE 

	END CATCH
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE 
END

GO

