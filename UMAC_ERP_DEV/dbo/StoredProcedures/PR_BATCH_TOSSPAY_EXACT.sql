
/*
-- 생성자 :	이동호
-- 등록일 :	2024.07.24
-- 수정자 : -
-- 수정일 : - 
-- 설 명 : 
-- 실행문 : 

	EXEC PR_BATCH_TOSSPAY_EXACT 'http://localhost:8080', 0, '20241205'
	EXEC PR_BATCH_TOSSPAY_EXACT 'http://erptest.umac.co.kr:8080', 0, '20241205'


*/
CREATE PROCEDURE [dbo].[PR_BATCH_TOSSPAY_EXACT]
	@P_URL			NVARCHAR(150) = '',
	@P_PAYTYPE		INT = 0,					-- 0 : 가상계좌, 1 : 안심키 카드결제
	@P_SEARCHDATE	NVARCHAR(8) = '',		-- 정산일자
	@P_MENUAL_YN	NVARCHAR(1)	= 'N'		-- 수동여부(Y/N)
AS
BEGIN

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
   		
	--개발/운영 구분 API HOST 확인 RETURN
	SET @P_URL = DBO.UMAC_API_URL()

	DECLARE @RETURN_CODE		INT = 0											-- 리턴코드
	DECLARE @RETURN_MESSAGE		NVARCHAR(250) = '정상적으로 연동되었습니다.'	-- 리턴메시지
	DECLARE @V_START_TIME		DATETIME = GETDATE();
	DECLARE @IDATE				VARCHAR(8) = (CASE WHEN @P_SEARCHDATE = '' OR @P_SEARCHDATE IS NULL THEN FORMAT(DATEADD(DAY,-1, GETDATE()), 'yyyyMMdd') ELSE @P_SEARCHDATE END)
	DECLARE @P_TYPE				NVARCHAR(10) = 'GET'		
	DECLARE @V_IDATE			VARCHAR(10) = FORMAT(CONVERT(DATETIME, @IDATE), 'yyyy-MM-dd')
	DECLARE @URL				NVARCHAR(500) = @P_URL + '/Api/TossPay/Settlements?startDate=' + @V_IDATE +'&endDate=' + @V_IDATE + '&dateType=paidOutDate&payType=' + CAST(@P_PAYTYPE AS VARCHAR) + '&page=1&size=100'
	DECLARE @P_BODY				NVARCHAR(4000) = ''
	DECLARE @R_RETURN_CODE 		INT 		
	DECLARE @R_RETURN_DATA 		VARCHAR(MAX) 
	
	BEGIN TRAN
	BEGIN TRY 
				
		EXEC SP_SEND_API @P_TYPE, @URL, @P_BODY, @R_RETURN_CODE OUT, @R_RETURN_DATA OUT
						
		DECLARE @PA_TOSS_DEPOSIT TABLE(
			SALES_DATE			NVARCHAR(10),
			PAYMENT_DATE		NVARCHAR(10),
			PYMNT_MTHD			NVARCHAR(15),
			ORD_NO				NVARCHAR(150),
			PAYAMT_AMT			NUMERIC(13,2),
			FEE					NUMERIC(13,2),
			BANKCODE			NVARCHAR(3)
		);
				
		--기존 등록된 데이터 먼저 삭제
		DELETE PA_TOSS_DEPOSIT WHERE PAIDOUTDATE = @IDATE AND METHOD = (CASE WHEN @P_PAYTYPE = 0 THEN '가상계좌' WHEN @P_PAYTYPE = 1 THEN '카드' END )

		INSERT INTO @PA_TOSS_DEPOSIT			
		SELECT 
			SALES_DATE,
			PAYMENT_DATE, 			
			(CASE WHEN @P_PAYTYPE = 0 THEN 'SC0040' WHEN @P_PAYTYPE = 1 THEN 'SC0010' ELSE '' END ) AS PYMNT_MTHD,
			ORD_NO,			
			PAYAMT_AMT, 
			FEE,
			BANKCODE
		FROM 
			OPENJSON ( @R_RETURN_DATA )   
				WITH (    					
						SALES_DATE			NVARCHAR(10) '$.soldDate',						--매출일자
						PAYMENT_DATE		NVARCHAR(10) '$.paidOutDate',					--정산 지급일자						
						ORD_NO				NVARCHAR(150) '$.orderId',						--주문번호
						PAYAMT_AMT			NUMERIC(13,2) '$.amount',						--거래금액
						FEE					NUMERIC(13,2) '$.fee',							--수수료
						BANKCODE			NVARCHAR(3) '$.virtualAccount.bankCode'			--은행코드
				) AS T1
				
		IF((SELECT COUNT(1) FROM @PA_TOSS_DEPOSIT) > 0)
		BEGIN

			INSERT INTO PA_TOSS_DEPOSIT (SOLDATE, PAIDOUTDATE, METHOD, ACQUIRERCODE, PAYMENTKEY, ORDERID, AMOUNT, FEE, VAT, SUPPLYAMOUNT, PAYOUTAMOUNT, IDATE)
			SELECT
				FORMAT(CONVERT(DATETIME, SALES_DATE), 'yyyyMMdd') AS SOLDATE,
				FORMAT(CONVERT(DATETIME, PAYMENT_DATE), 'yyyyMMdd') AS PAIDOUTDATE, 			
				(CASE WHEN PYMNT_MTHD = 'SC0010' THEN '카드' WHEN PYMNT_MTHD = 'SC0040' THEN '가상계좌' ELSE '' END) AS METHOD,		
				ISNULL((CASE WHEN TDP.PYMNT_MTHD = 'SC0010' THEN CRD.FINANCECODE WHEN TDP.PYMNT_MTHD = 'SC0040' THEN TDP.BANKCODE ELSE '' END), '') AS ACQUIRERCODE,
				'' AS PAYMENTKEY,
				ORD_NO AS ORDERID,			
				PAYAMT_AMT AS AMOUNT, 
				FEE,
				0 AS VAT,
				0 AS SUPPLYAMOUNT,
				(PAYAMT_AMT - FEE) AS PAYOUTAMOUNT,
				GETDATE()
			FROM @PA_TOSS_DEPOSIT AS TDP 
				LEFT OUTER JOIN TBL_TOSSPAY_XPAY AS CRD ON TDP.ORD_NO = CRD.OID
				--LEFT OUTER JOIN TBL_TOSSPAY_VIRTUAL AS VT ON TDP.ORD_NO = VT.ORDERID AND VT.[STATUS] = 'DONE'

		END
		ELSE
		BEGIN
			SET @RETURN_MESSAGE = '해당 입급일자에 연동 데이터가 없습니다.'
		END
										
		COMMIT;

	END TRY
	BEGIN CATCH		

	    IF @@TRANCOUNT > 0
		BEGIN
			ROLLBACK TRAN;
			
			SET @RETURN_CODE = -1
			SET @RETURN_MESSAGE = ERROR_MESSAGE();

			INSERT INTO TBL_BATCH_LOG
			SELECT CONVERT(VARCHAR(8), GETDATE(), 112)
				, 'PR_BATCH_TOSSPAY_EXACT'
				, 'F'
				, @V_START_TIME
				, GETDATE()
				, CONCAT(ERROR_MESSAGE(), ' / ', @RETURN_CODE)
				, @P_MENUAL_YN
			;
					
		END;
		
	END CATCH

	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE;
END

GO

