/*
-- 생성자 :	강세미
-- 등록일 :	2023.04.16
-- 설 명  : 출고서류관리 - 주문 리스트 조회
-- 수정   : 2024.06.13 강세미 : 파일등록여부(DOCUMENT_YN 추가)
-- 설 명  :	
-- 실행문 : 
EXEC PR_FILE_ORDER_LIST '','','','','20240201','20240416'
*/
CREATE PROCEDURE [dbo].[PR_FILE_ORDER_LIST]
( 
	@P_VEN_CODE		NVARCHAR(7) = '',			-- 거래처코드
	@P_ORD_NO		NVARCHAR(11) = '',			-- 주문번호
	@P_SCAN_CODE	NVARCHAR(14) = '',			-- 스캔코드
	@P_ORD_STAT		NVARCHAR(11) = '',			-- 주문상태
	@P_START_DT		NVARCHAR(8) = '',			-- 조회시작일자
	@P_END_DT		NVARCHAR(8) = ''			-- 조회종료일자
)
AS
BEGIN

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
	BEGIN TRY 
	 
		SELECT
			ROW_NUMBER() OVER(ORDER BY A.ORD_NO DESC) AS ROW_NUM
			, A.ORD_NO
			, A.VEN_CODE
			, A.ORD_STAT
			, A.R_ADDR
			, A.R_ADDR_DTL
			, (CONCAT_WS('|', IIF(A.DOCUMENT_REQ_1 IS NULL, NULL, I.CD_NM1),
							  IIF(A.DOCUMENT_REQ_2 IS NULL, NULL, I.CD_NM2),
							  IIF(A.DOCUMENT_REQ_3 IS NULL, NULL, I.CD_NM3),
							  IIF(A.DOCUMENT_REQ_4 IS NULL, NULL, I.CD_NM4))
			) AS DOCUMENT_REQ
			, A.DOCUMENT_REMARKS
			, A.DELIVERY_REQ_DT
			, C.VEN_NAME
			, D.ITM_NAME + (CASE WHEN B.ITM_CNT > 1 THEN ' 외 ' + CAST(B.ITM_CNT - 1 AS VARCHAR) + '건' ELSE '' END) AS ITM_NAME	
			, E.DELIVERY_NAME
			, G.CD_NM AS CAR_GB_NM
			, H.CD_NM AS ORD_STAT_NM
			, (CASE WHEN DOCUMENT_REQ_YN > 0 THEN 'Y' ELSE 'N' END) AS DOCUMENT_YN
		FROM PO_ORDER_HDR AS A 
			INNER JOIN (
				SELECT A.ORD_NO, COUNT(A.ORD_NO) AS ITM_CNT, MAX(B.SCAN_CODE) AS SCAN_CODE
					FROM PO_ORDER_HDR AS A 
						INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
							WHERE 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN @P_VEN_CODE <> '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 0 END )
							AND 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO = @P_ORD_NO THEN 1 ELSE 0 END )
							AND 1 = (CASE WHEN @P_ORD_STAT = '' THEN 1 WHEN @P_ORD_STAT <> '' AND A.ORD_STAT = @P_ORD_STAT THEN 1 ELSE 0 END )
							AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END)
							AND 1 = (CASE WHEN A.DELIVERY_REQ_DT BETWEEN @P_START_DT AND @P_END_DT THEN 1 ELSE 0 END)
						GROUP BY A.ORD_NO
			) AS B ON A.ORD_NO = B.ORD_NO
			INNER JOIN CD_PARTNER_MST AS C 
				ON C.VEN_CODE = A.VEN_CODE
			INNER JOIN CD_PRODUCT_CMN AS D
				ON D.SCAN_CODE = B.SCAN_CODE
			LEFT OUTER JOIN CD_PARTNER_DELIVERY AS E
				ON A.VEN_CODE = E.VEN_CODE AND E.DELIVERY_CODE = A.DELIVERY_CODE
			LEFT OUTER JOIN PO_SCALE AS F
				ON F.ORD_NO = A.ORD_NO
			LEFT OUTER JOIN TBL_COMM_CD_MST AS G
				ON G.CD_CL = 'CAR_GB' AND F.CAR_GB = G.CD_ID
			LEFT OUTER JOIN TBL_COMM_CD_MST AS H
				ON H.CD_CL = 'ORD_STAT' AND A.ORD_STAT = H.CD_ID
			LEFT OUTER JOIN VIEW_COMM_CD_MST_DOCUMENT AS I 
				ON (A.DOCUMENT_REQ_1 = I.CD_ID1 
				OR A.DOCUMENT_REQ_2 = I.CD_ID2 
				OR A.DOCUMENT_REQ_3 = I.CD_ID3 
				OR A.DOCUMENT_REQ_4 = I.CD_ID4)
			LEFT OUTER JOIN (SELECT ORD_NO,
									COUNT(SEQ) AS DOCUMENT_REQ_YN
							   FROM PO_DOCUMENT_REQ 
							  GROUP BY ORD_NO) AS J ON A.ORD_NO = J.ORD_NO
			ORDER BY DELIVERY_REQ_DT
					
	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

