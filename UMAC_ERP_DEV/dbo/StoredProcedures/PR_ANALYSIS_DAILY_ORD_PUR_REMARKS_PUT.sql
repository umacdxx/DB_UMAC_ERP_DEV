
/*

-- 생성자 :	윤현빈
-- 등록일 :	2024.09.02
-- 설 명  : 입고/출고일보 비고 저장
-- 실행문 : 

EXEC PR_ANALYSIS_DAILY_ORD_PUR_REMARKS_PUT '','','','',''

*/
CREATE PROCEDURE [dbo].[PR_ANALYSIS_DAILY_ORD_PUR_REMARKS_PUT]
( 
	@P_JSONDT			VARCHAR(8000) = '',
	@P_EMP_ID			NVARCHAR(20)				-- 아이디
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	DECLARE @RETURN_CODE	INT = 0										-- 리턴코드(저장완료)
	DECLARE @RETURN_MESSAGE NVARCHAR(MAX) = DBO.GET_ERR_MSG('0')		-- 리턴메시지
	
	BEGIN TRAN
	BEGIN TRY 

		DECLARE @TMP_ITEM TABLE (
			REPORT_DATE NVARCHAR(8),
			VEN_CODE NVARCHAR(7),
			SCAN_CODE NVARCHAR(14),
			REMARKS NVARCHAR(2000),
			MODE NVARCHAR(1)
		)
		
		INSERT INTO @TMP_ITEM
		SELECT REPORT_DATE, VEN_CODE, SCAN_CODE, REMARKS, MODE
			FROM 
				OPENJSON ( @P_JSONDT )   
					WITH (    
						REPORT_DATE NVARCHAR(8) '$.REPORT_DATE',
						VEN_CODE NVARCHAR(7) '$.VEN_CODE',
						SCAN_CODE NVARCHAR(14) '$.SCAN_CODE',
						REMARKS NVARCHAR(2000) '$.REMARKS',
						MODE NVARCHAR(1) '$.MODE'
					)
				
		DECLARE CURSOR_PUR CURSOR FOR

			SELECT A.REPORT_DATE, A.VEN_CODE, A.SCAN_CODE, A.REMARKS, MODE 
				FROM @TMP_ITEM A
			
		OPEN CURSOR_PUR

		DECLARE @P_REPORT_DATE NVARCHAR(8),
				@P_VEN_CODE NVARCHAR(7),
				@P_SCAN_CODE NVARCHAR(14),
				@P_REMARKS NVARCHAR(2000),
				@P_MODE NVARCHAR(1)

		FETCH NEXT FROM CURSOR_PUR INTO @P_REPORT_DATE, @P_VEN_CODE, @P_SCAN_CODE, @P_REMARKS, @P_MODE

			WHILE(@@FETCH_STATUS=0)
			BEGIN

				UPDATE RP_ANALYSIS_DAILY_PUR
					SET REMARKS = @P_REMARKS
					  , UDATE = GETDATE()
					  , UEMP_ID = @P_EMP_ID
				   WHERE REPORT_DATE = @P_REPORT_DATE
				     AND VEN_CODE = @P_VEN_CODE
					 AND SCAN_CODE = @P_SCAN_CODE
				;

				FETCH NEXT FROM CURSOR_PUR INTO @P_REPORT_DATE, @P_VEN_CODE, @P_SCAN_CODE, @P_REMARKS, @P_MODE

			END

		CLOSE CURSOR_PUR
		DEALLOCATE CURSOR_PUR

	COMMIT;
	END TRY
	
	BEGIN CATCH	
		
		IF @@TRANCOUNT > 0
		BEGIN 
			ROLLBACK TRAN
			SET @RETURN_CODE = -1
			SET @RETURN_MESSAGE = ERROR_MESSAGE()

			--에러 로그 테이블 저장
			INSERT INTO TBL_ERROR_LOG 
			SELECT ERROR_PROCEDURE()		-- 프로시저명
				, ERROR_MESSAGE()			-- 에러메시지
				, ERROR_LINE()				-- 에러라인
				, GETDATE()	
		END 
		
		SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE 

	END CATCH
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE 
END

GO

