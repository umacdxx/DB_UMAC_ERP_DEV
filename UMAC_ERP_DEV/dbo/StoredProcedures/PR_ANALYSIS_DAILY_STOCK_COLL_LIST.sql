/*
-- 생성자 :	윤현빈
-- 등록일 :	2024.09.11
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 일 수불 현황
-- 실행문 : EXEC PR_ANALYSIS_DAILY_STOCK_COLL_LIST '','','','',''
*/
CREATE PROCEDURE [dbo].[PR_ANALYSIS_DAILY_STOCK_COLL_LIST]
( 
	@P_REPORT_DATE		NVARCHAR(8), -- 조회일자
	@P_LOT_OIL_GB		NVARCHAR(2), -- 유종구분
	@P_LOT_PARTNER_GB	NVARCHAR(3), -- 거래처구분
	@P_LRG_CODE			NVARCHAR(2), -- 대분류
	@P_MID_CODE			NVARCHAR(4), -- 중분류
	@P_IS_STOCK_CHANGED	BIT			 -- 재고변동분 (0:false, 1:true)
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	BEGIN TRY 	

		DECLARE @V_YESTERDAY_DATE NVARCHAR(8);

		SET @V_YESTERDAY_DATE = CONVERT(NVARCHAR(8), DATEADD(DAY, -1, CONVERT(DATE, @P_REPORT_DATE, 112)), 112);

	-- ************************************************************
	-- 0. 부자재 계산 (루뎅, 띠라벨, 캔-패드)
	-- W_CAP_DATA ~ W_MAT_USAGE
	-- ************************************************************
		WITH W_CAP_DATA AS (
			SELECT A.PROD_DT
				 , A.SCAN_CODE
				 , A.COMP_CODE
				 , A.INPUT_QTY
				 , SUM(A.INPUT_QTY) OVER(PARTITION BY A.COMP_CODE ORDER BY A.PROD_DT) AS CUM_LUTEN_INPUT_QTY
				 , SUM(A.INPUT_QTY) OVER(PARTITION BY A.SCAN_CODE, A.COMP_CODE ORDER BY A.PROD_DT) AS CUM_LABEL_INPUT_QTY
				FROM PD_MAT_USAGE AS A
			   WHERE YYYYMM = LEFT(@P_REPORT_DATE, 6)
				 AND PROD_DT <= @P_REPORT_DATE
				 AND MAT_GB = '1'
		), W_CAN_DATA AS (
			SELECT A.PROD_DT
				 , A.SCAN_CODE
				 , C.CD_ID AS COMP_CODE
				 , A.PROD_APP_QTY AS PROD_QTY
				 , CAST(ROUND(A.PROD_APP_QTY / C.MGMT_ENTRY_3, 0) AS INT) AS INPUT_QTY
				FROM CD_LOT_MST AS A
				INNER JOIN CD_PRODUCT_CMN AS B ON A.SCAN_CODE = B.SCAN_CODE
				INNER JOIN TBL_COMM_CD_MST AS C ON B.MID_CODE = C.MGMT_ENTRY_1 AND B.UNIT_CAPACITY = C.MGMT_ENTRY_2 AND C.CD_CL = 'MAPPING_CAN_PAD' AND DEL_YN = 'N'
			   WHERE PROD_DT = @P_REPORT_DATE
			     AND A.CFM_FLAG = 'Y'
		), W_LUTEN as (
			SELECT A.PROD_DT
				 , B.MGMT_ENTRY_1 AS COMP_CODE
				 , CAST(ROUND(A.CUM_LUTEN_INPUT_QTY / CAST(B.MGMT_ENTRY_DESCRIPTION_1 AS DECIMAL), 0) - COALESCE(LAG(ROUND(A.CUM_LUTEN_INPUT_QTY / CAST(B.MGMT_ENTRY_DESCRIPTION_1 AS DECIMAL), 0)) 
				   OVER (PARTITION BY A.COMP_CODE ORDER BY A.PROD_DT), 0) AS INT) AS INPUT_QTY
				FROM W_CAP_DATA AS A
				INNER JOIN TBL_COMM_CD_MST AS B ON A.COMP_CODE = B.CD_ID AND B.CD_CL = 'MAPPING_CAP_LUTEN' AND DEL_YN = 'N'
		), W_LABEL AS (
			SELECT A.PROD_DT
				 , B.MGMT_ENTRY_1 AS COMP_CODE
				 , CAST(ROUND(A.CUM_LABEL_INPUT_QTY / CAST(B.MGMT_ENTRY_DESCRIPTION_1 AS DECIMAL), 0) - COALESCE(LAG(ROUND(A.CUM_LABEL_INPUT_QTY / CAST(B.MGMT_ENTRY_DESCRIPTION_1 AS DECIMAL), 0)) 
				   OVER (PARTITION BY A.SCAN_CODE, A.COMP_CODE ORDER BY A.PROD_DT), 0) AS INT) AS INPUT_QTY
				FROM W_CAP_DATA AS A
				INNER JOIN TBL_COMM_CD_MST AS B ON A.SCAN_CODE = B.CD_ID AND B.CD_CL = 'MAPPING_CAP_LABEL' AND DEL_YN = 'N'
		), W_PAD AS (
			SELECT A.PROD_DT
				 , A.COMP_CODE
				 , INPUT_QTY
				FROM W_CAN_DATA AS A
		), W_MAT_USAGE AS (
			SELECT * FROM W_LUTEN AS A WHERE A.PROD_DT = @P_REPORT_DATE
			UNION ALL
			SELECT * FROM W_LABEL AS A WHERE A.PROD_DT = @P_REPORT_DATE
			UNION ALL
			SELECT * FROM W_PAD AS A WHERE A.PROD_DT = @P_REPORT_DATE
		), 
		
		W_DATA AS (
	-- ************************************************************
	-- 1. 전일 재고 : 전 일자 기말재고 
	-- ************************************************************
			SELECT A.ITM_CODE AS ITM_CODE
			     , A.BASE_INV_QTY
				 , 0 AS PUR_QTY, 0 AS ORD_QTY, 0 AS PROD_QTY, 0 AS RTN_QTY, 0 AS INV_ADJ_QTY
				FROM (
					SELECT A.ITM_CODE						-- 관리 코드
						 , A.INV_END_QTY AS BASE_INV_QTY	-- 전 일자 기말 재고 수량			
						FROM IV_DT_ITEM_COLL AS A
						INNER JOIN CD_PRODUCT_CMN AS B ON A.ITM_CODE = B.ITM_CODE
						INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
						INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE 
					   WHERE A.INV_DT = @V_YESTERDAY_DATE
						 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
						 --AND 1=
				) AS A
			UNION ALL
	-- ************************************************************
	-- 2. 입고(매입)
	-- 매입확정 시 수불처리
	-- ************************************************************
			SELECT A.ITM_CODE AS ITM_CODE, 0 AS BASE_INV_QTY
				 , A.PUR_QTY
				 , 0 AS ORD_QTY, 0 AS PROD_QTY, 0 AS RTN_QTY, 0 AS INV_ADJ_QTY
				FROM (
					SELECT C.ITM_CODE											-- 관리 코드
						 , ISNULL(SUM(B.PUR_QTY), 0) AS PUR_QTY					-- 입고(매입)수량
						FROM PO_PURCHASE_HDR AS A 
						INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
						INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
						INNER JOIN CD_MID_MST AS MID ON C.MID_CODE = MID.MID_CODE 
						INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE 
					   WHERE A.DELIVERY_IN_DT = @P_REPORT_DATE
						 AND A.PUR_STAT IN ('35', '40') -- 매입확정
						 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND C.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND C.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
					   GROUP BY C.ITM_CODE
				) AS A
			UNION ALL
	-- ************************************************************
	-- 3. 매출(-)
	-- 매출확정 시 수불처리
	-- 박스 상품은 단품 상품으로 치환
	-- ************************************************************
			SELECT A.ITM_CODE AS ITM_CODE, 0 AS BASE_INV_QTY, 0 AS PUR_QTY
				 , A.ORD_QTY
				 , 0 AS PROD_QTY, 0 AS RTN_QTY, 0 AS INV_ADJ_QTY
				FROM (
					SELECT CASE WHEN C.ITM_FORM = '2' AND D.BOX_CODE IS NOT NULL THEN ISNULL(D.ITM_CODE, C.ITM_CODE) ELSE C.ITM_CODE END AS ITM_CODE	-- 관리 코드
						 , CASE WHEN C.ITM_FORM = '2' AND D.BOX_CODE IS NOT NULL THEN ISNULL(SUM(B.PICKING_QTY * ISNULL(D.IPSU_QTY, 1)), 0) * (-1) ELSE ISNULL(SUM(B.PICKING_QTY), 0) * (-1) END AS ORD_QTY							-- 매출수량 [-]
						FROM PO_ORDER_HDR AS A
						--INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
						INNER JOIN VIEW_ORDER_DTL_SAMPLE_SUM AS B ON A.ORD_NO = B.ORD_NO
						INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
						INNER JOIN CD_MID_MST AS MID ON C.MID_CODE = MID.MID_CODE 
						INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE 
						LEFT OUTER JOIN CD_BOX_MST AS D ON C.ITM_CODE = D.BOX_CODE
					   WHERE A.DELIVERY_DEC_DT = @P_REPORT_DATE
						 AND A.ORD_STAT IN ('35', '40') -- 매출확정
						 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND C.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND C.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
						 AND A.ORD_GB = '1'
					   GROUP BY (CASE WHEN C.ITM_FORM = '2' AND D.BOX_CODE IS NOT NULL THEN ISNULL(D.ITM_CODE, C.ITM_CODE) ELSE C.ITM_CODE END), C.ITM_FORM, D.BOX_CODE
				) AS A
			UNION ALL
	-- ************************************************************
	-- 4. 생산
	-- ************************************************************
			SELECT A.ITM_CODE AS ITM_CODE, 0 AS BASE_INV_QTY, 0 AS PUR_QTY, 0 AS ORD_QTY
				 , A.PROD_QTY
				 , 0 AS RTN_QTY, 0 AS INV_ADJ_QTY
				FROM (
					SELECT A.ITM_CODE
					     , SUM(PROD_QTY) AS PROD_QTY
						FROM (
							-- 제품 생산
							SELECT B.ITM_CODE		-- 관리 코드
								 , A.PROD_APP_QTY AS PROD_QTY		-- 생산 수량
								FROM CD_LOT_MST AS A
								INNER JOIN CD_PRODUCT_CMN AS B ON A.SCAN_CODE = B.SCAN_CODE
								INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
								INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE
							   WHERE A.PROD_DT = @P_REPORT_DATE
								 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
							     AND A.CFM_FLAG = 'Y'
							UNION ALL
							-- 제품 생산(BOM)
							SELECT B.ITM_CODE					-- 관리 코드
								 , SUM(A.COMP_APP_QTY) AS PROD_QTY 	-- 생산 수량
								FROM PD_BOM_SET_HIST AS A
								INNER JOIN CD_PRODUCT_CMN AS B ON A.BOM_SET_COMP_CD = B.SCAN_CODE
								INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
								INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE
							   WHERE A.PROD_DT = @P_REPORT_DATE
								 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
								 AND A.CFM_FLAG = 'Y'
							   GROUP BY B.ITM_CODE
							-- 제품 생산(SET)
							UNION ALL
							--SELECT B.ITM_CODE					-- 관리 코드
							--	 , SUM(A.PROD_QTY) AS PROD_QTY 	-- 생산 수량
							--	FROM PD_SET_RESULT_PROD AS A
							--	INNER JOIN CD_PRODUCT_CMN AS B ON A.SCAN_CODE = B.SCAN_CODE
							--	INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
							--	INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE
							--   WHERE A.PROD_DT = @P_REPORT_DATE
							--	 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
							--	 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
							--	 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
							--	 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
							--   GROUP BY B.ITM_CODE
							--UNION ALL
							---- 제품 생산(SET BOM)
							--SELECT B.ITM_CODE					-- 관리 코드
							--	 , SUM(A.COMP_QTY) AS PROD_QTY 	-- 생산 수량
							--	FROM PD_SET_RESULT_COMP AS A
							--	INNER JOIN CD_PRODUCT_CMN AS B ON A.SET_COMP_CD = B.SCAN_CODE
							--	INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
							--	INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE
							--   WHERE A.PROD_DT = @P_REPORT_DATE
							--	 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
							--	 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
							--	 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
							--	 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
							--	 AND A.RESTORE_YN = 'N'
							--   GROUP BY B.ITM_CODE
							--UNION ALL
							-- 부자재 사용(루뎅, 띠라벨, 패드)
							SELECT B.ITM_CODE
							     , SUM(A.INPUT_QTY) * (-1) AS PROD_QTY
								FROM W_MAT_USAGE AS A
								INNER JOIN CD_PRODUCT_CMN AS B ON A.COMP_CODE = B.SCAN_CODE
								INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
								INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE
							   WHERE 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
								 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
							   GROUP BY B.ITM_CODE
						) AS A
						GROUP BY A.ITM_CODE
				) AS A

			UNION ALL
	-- ************************************************************
	-- 5. 매출반품(+)
	-- ************************************************************
			SELECT A.ITM_CODE AS ITM_CODE, 0 AS BASE_INV_QTY, 0 AS PUR_QTY, 0 AS SALE_QTY, 0 AS PROD_QTY
				 , A.RTN_QTY AS RTN_QTY
				 , 0 AS INV_ADJ_QTY
				FROM (
					SELECT CASE WHEN C.ITM_FORM = '2' AND D.BOX_CODE IS NOT NULL THEN ISNULL(D.ITM_CODE, C.ITM_CODE) ELSE C.ITM_CODE END AS ITM_CODE	-- 관리 코드
						 , CASE WHEN C.ITM_FORM = '2' AND D.BOX_CODE IS NOT NULL THEN ISNULL(SUM(B.PICKING_QTY * ISNULL(D.IPSU_QTY, 1)), 0) ELSE ISNULL(SUM(B.PICKING_QTY), 0) END AS RTN_QTY
						FROM PO_ORDER_HDR AS A
						INNER JOIN VIEW_ORDER_DTL_SAMPLE_SUM AS B ON A.ORD_NO = B.ORD_NO
						INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
						LEFT OUTER JOIN CD_BOX_MST AS D ON C.ITM_CODE = D.BOX_CODE
					   WHERE A.DELIVERY_DEC_DT = @P_REPORT_DATE
						 AND A.ORD_STAT IN ('35', '40') -- 매출확정
						 AND A.ORD_GB = '2'
					   GROUP BY (CASE WHEN C.ITM_FORM = '2' AND D.BOX_CODE IS NOT NULL THEN ISNULL(D.ITM_CODE, C.ITM_CODE) ELSE C.ITM_CODE END), C.ITM_FORM, D.BOX_CODE
				) AS A
			UNION ALL
	-- ************************************************************
	-- 6. 재고조정(+,-)
	-- ************************************************************
			SELECT A.ITM_CODE AS ITM_CODE, 0 AS BASE_INV_QTY, 0 AS PUR_QTY, 0 AS ORD_QTY, 0 AS PROD_QTY, 0 AS RTN_QTY
				 , A.INV_ADJ_QTY
				FROM (
					SELECT CASE WHEN B.ITM_FORM = '2' THEN ISNULL(C.ITM_CODE, A.ITM_CODE) ELSE A.ITM_CODE END AS ITM_CODE
						 , CASE WHEN B.ITM_FORM = '2' THEN ISNULL(SUM(A.APP_QTY * ISNULL(C.IPSU_QTY, 1)), 0) ELSE ISNULL(SUM(A.APP_QTY), 0) END AS INV_ADJ_QTY
						FROM IV_STOCK_ADJUST AS A
						INNER JOIN CD_PRODUCT_CMN AS B ON A.SCAN_CODE = B.SCAN_CODE
						INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
						INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE
						LEFT OUTER JOIN CD_BOX_MST AS C ON A.ITM_CODE = C.BOX_CODE
					   WHERE A.INV_DT = @P_REPORT_DATE
						 AND A.CFM_FLAG = 'Y'
						 AND A.SEQ=(CASE WHEN A.INV_GB = '99' THEN (SELECT MAX(SEQ) FROM IV_STOCK_ADJUST AS T WHERE T.INV_DT = A.INV_DT AND T.ITM_CODE = A.ITM_CODE AND T.LOT_NO = A.LOT_NO AND T.INV_GB = '99') ELSE A.SEQ END )
						 AND 1=(CASE WHEN @P_LOT_OIL_GB = '' THEN 1 WHEN @P_LOT_OIL_GB != '' AND B.LOT_OIL_GB = @P_LOT_OIL_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LOT_PARTNER_GB = '' THEN 1 WHEN @P_LOT_PARTNER_GB != '' AND B.LOT_PARTNER_GB = @P_LOT_PARTNER_GB THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
						 AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
					   GROUP BY (CASE WHEN B.ITM_FORM = '2' THEN ISNULL(C.ITM_CODE, A.ITM_CODE) ELSE A.ITM_CODE END), B.ITM_FORM
				) AS A
		), W_SUM_RESULT AS (
			SELECT A.ITM_CODE
				 , CAST(SUM(A.BASE_INV_QTY) AS DECIMAL) AS BASE_INV_QTY	-- 전일 재고
				 , CAST(SUM(A.PUR_QTY) AS DECIMAL) AS PUR_QTY			-- 입고
				 , CAST(SUM(A.ORD_QTY) AS DECIMAL) AS ORD_QTY			-- 출고
				 , CAST(SUM(A.PROD_QTY) AS DECIMAL) AS PROD_QTY			-- 생산
				 , CAST(SUM(A.RTN_QTY) AS DECIMAL) AS RTN_QTY			-- 매입반품
				 , CAST(SUM(A.INV_ADJ_QTY) AS DECIMAL) AS INV_ADJ_QTY	-- 재고조정
				 , CAST(SUM(A.BASE_INV_QTY) + SUM(PUR_QTY) + SUM(ORD_QTY) + SUM(PROD_QTY) + SUM(RTN_QTY) + SUM(INV_ADJ_QTY) AS DECIMAL) AS INV_END_QTY		-- 기말 재고 수량
				FROM W_DATA AS A
			   GROUP BY A.ITM_CODE
		)
		SELECT ROW_NUMBER() OVER(ORDER BY B.SCAN_CODE) AS ROW_NUM
  			 , C.CD_NM AS LOT_PARTNER_GB_NM
  			 , B.SCAN_CODE
  			 , B.ITM_NAME
			 , A.BASE_INV_QTY
			 , A.PUR_QTY
			 , A.ORD_QTY
			 , A.PROD_QTY
			 , A.RTN_QTY
			 , A.INV_ADJ_QTY
			 , A.INV_END_QTY
  			 , ISNULL(D.REMARKS, '') AS REMARKS
			 , B.WEIGHT_GB
  			FROM W_SUM_RESULT AS A
  			INNER JOIN CD_PRODUCT_CMN AS B ON A.ITM_CODE = B.ITM_CODE
  			INNER JOIN TBL_COMM_CD_MST AS C ON B.LOT_PARTNER_GB = C.CD_ID AND C.CD_CL = 'LOT_PARTNER_GB'
  			LEFT OUTER JOIN RP_ANALYSIS_DAILY_STOCK_COLL AS D ON @P_REPORT_DATE = D.REPORT_DATE AND B.SCAN_CODE = D.SCAN_CODE
  		   WHERE B.ITM_FORM != '3'
		     AND 1=(CASE WHEN @P_IS_STOCK_CHANGED = 0 THEN 1 WHEN @P_IS_STOCK_CHANGED = 1 AND A.BASE_INV_QTY - A.INV_END_QTY != 0 THEN 1 ELSE 2 END)
		   ;

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

