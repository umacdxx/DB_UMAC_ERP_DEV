
/*
-- 생성자 :	윤현빈
-- 등록일 :	2024.03.08
-- 설 명  : 입출고 현황 리스트
-- 수정자 :	이동호
-- 수정일 :	2024.03.26
-- 설 명  : 튜닝(성능이슈 개선) 
-- 실행문 : EXEC PR_WMS_REPORT_HDR_LIST_TEST '','20240101','20240315','20240101','20240315','','','','','',100,0
*/
CREATE PROCEDURE [dbo].[PR_WMS_REPORT_HDR_LIST_TEST]
( 
	@P_IO_GB					INT				= 0,	-- 입출고구분(입고:1, 출고:2)
	@P_FROM_ORD_DT				NVARCHAR(10)	= '',	-- 주문(발주) 일자
	@P_TO_ORD_DT				NVARCHAR(10)	= '',	-- 주문(발주) 일자
	@P_FROM_DELIVERY_REQ_DT		NVARCHAR(10)	= '',	-- 출고요청 일자
	@P_TO_DELIVERY_REQ_DT		NVARCHAR(10)	= '',	-- 출고요청 일자
	@P_ORD_STAT					NVARCHAR(30)	= '',	-- 출고상태
	@P_PUR_STAT					NVARCHAR(30)	= '',	-- 입고상태
	@P_VEN_CODE					NVARCHAR(50)	= '',	-- 거래처명(코드)
	@P_ORD_NO					NVARCHAR(11)	= '',	-- 주문(발주)번호
	@P_SCAN_CODE				NVARCHAR(14)	= '',	-- 상품명(코드)
	@P_TOT_PAGE_ROW				INT,					
	@P_PAGE_INDEX				INT
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	BEGIN TRY 

		-- 리스트 TOTAL COUNT 
		DECLARE @TOT_CNT INT = 0;

		 --# TOTAL COUNT #	
		
		WITH TOTAL_CNT AS (

			SELECT COUNT(A.ORD_NO) AS CNT FROM PO_ORDER_HDR AS A 
				INNER JOIN (
					SELECT A.ORD_NO
						FROM PO_ORDER_HDR AS A	
							INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
							--INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE			
							WHERE 1=(CASE WHEN @P_IO_GB = 1 THEN 2 ELSE 1 END)
									AND 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END ) 
									AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT
									AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END )
									AND A.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT						
									AND 1 = (CASE WHEN @P_ORD_STAT = '' THEN 1 WHEN  @P_ORD_STAT <> '' AND @P_ORD_STAT = A.ORD_STAT THEN 1 ELSE 0 END ) 							
									AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
								GROUP BY A.ORD_NO
			)  AS B ON A.ORD_NO = B.ORD_NO
			
			UNION ALL 

			SELECT COUNT(A.ORD_NO) AS CNT FROM PO_PURCHASE_HDR AS A 
				INNER JOIN (
					SELECT A.ORD_NO
						FROM PO_PURCHASE_HDR AS A	
							INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
							--INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE	
							WHERE 1 = (CASE WHEN @P_IO_GB = 2 THEN 2 ELSE 1 END)									
									AND 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END )
									AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT								
									AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END ) 
									AND 1 = (CASE WHEN @P_PUR_STAT = '' THEN 1 WHEN  @P_PUR_STAT <> '' AND @P_PUR_STAT = A.PUR_STAT THEN 1 ELSE 0 END ) 			
									AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
					GROUP BY A.ORD_NO
			)  AS B ON A.ORD_NO = B.ORD_NO				
		)

		-- TOTLA COUNT 변수 SET
		SELECT @TOT_CNT = SUM(CNT) FROM TOTAL_CNT;
		
		-- # LIST #	

		WITH LIST AS (

			SELECT A.ORD_DT, 'O' AS IO_GB
				, ISNULL(A.ORD_CFM, 'N') AS CONFIRM_GB
				, A.ORD_NO
				, A.ORD_NO_PARENT
				, A.VEN_CODE
				, A.DELIVERY_REQ_DT		
				, A.R_ADDR AS ADDR
				, A.R_ADDR_DTL AS ADDR_DTL
				, B.ITM_CNT
				, B.SCAN_CODE
				, B.IO_AMT
				, C.CD_NM AS [STATUS]
			FROM PO_ORDER_HDR AS A INNER JOIN (
				SELECT A.ORD_NO, COUNT(A.ORD_NO) AS ITM_CNT, MAX(B.SCAN_CODE) AS SCAN_CODE, SUM(B.PICKING_SAMT) AS IO_AMT   
					FROM PO_ORDER_HDR AS A	
						INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
						--INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE			
						WHERE 1=(CASE WHEN @P_IO_GB = 1 THEN 2 ELSE 1 END)
								AND 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END ) 
								AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT
								AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END )
								AND A.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT						
								AND 1 = (CASE WHEN @P_ORD_STAT = '' THEN 1 WHEN  @P_ORD_STAT <> '' AND @P_ORD_STAT = A.ORD_STAT THEN 1 ELSE 0 END ) 							
								AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
							GROUP BY A.ORD_NO
			)  AS B ON A.ORD_NO = B.ORD_NO
				LEFT OUTER JOIN TBL_COMM_CD_MST AS C ON C.CD_CL = 'ORD_STAT' AND A.ORD_STAT = C.CD_ID

			UNION ALL 

			SELECT A.ORD_DT
				, 'I' AS IO_GB
				, ISNULL(A.PUR_CFM, 'N') AS CONFIRM_GB
				, A.ORD_NO
				, A.ORD_NO AS ORD_NO_PARENT
				, A.VEN_CODE
				, '' AS DELIVERY_REQ_DT
				, '' AS ADDR
				, '' AS ADDR_DTL	
				, B.ITM_CNT
				, B.SCAN_CODE
				, B.IO_AMT
				, C.CD_NM AS [STATUS]
			FROM PO_PURCHASE_HDR AS A INNER JOIN (
					SELECT A.ORD_NO, COUNT(A.ORD_NO) AS ITM_CNT, MAX(B.SCAN_CODE) AS SCAN_CODE, SUM(B.PUR_WAMT) AS IO_AMT   
						FROM PO_PURCHASE_HDR AS A	
							INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
							--INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE	
							WHERE 1 = (CASE WHEN @P_IO_GB = 2 THEN 2 ELSE 1 END)									
									AND 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END )
									AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT								
									AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END ) 
									AND 1 = (CASE WHEN @P_PUR_STAT = '' THEN 1 WHEN  @P_PUR_STAT <> '' AND @P_PUR_STAT = A.PUR_STAT THEN 1 ELSE 0 END ) 			
									AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
					GROUP BY A.ORD_NO
			)  AS B ON A.ORD_NO = B.ORD_NO
				LEFT OUTER JOIN TBL_COMM_CD_MST AS C ON C.CD_CL = 'PUR_STAT' AND A.PUR_STAT = C.CD_ID
		)
		
		SELECT ROW_NUMBER() OVER(ORDER BY T1.IO_GB DESC, T1.ORD_NO_PARENT DESC) + @P_PAGE_INDEX AS ROW_NUM
			, @TOT_CNT AS TOT_CNT
			, T1.*
		FROM (
			SELECT  				
				 CASE WHEN A.IO_GB = 'I' THEN '입고' ELSE '출고' END AS IO_GB
				, IIF(A.CONFIRM_GB = 'Y', '확정', '미확정')  AS CONFIRM_GB
				, A.ORD_NO
				, A.ORD_NO_PARENT
				, A.VEN_CODE
				, ISNULL(B.VEN_NAME, '') AS VEN_NAME
				, A.DELIVERY_REQ_DT	
				, C.ITM_NAME + (CASE WHEN A.ITM_CNT > 1 THEN ' 외 ' + CAST(A.ITM_CNT -1 AS VARCHAR) + '건' ELSE '' END) AS ITM_NAME
				, A.ADDR + ' ' + A.ADDR_DTL AS ADDR
				, A.[STATUS]			
				, A.ITM_CNT
				, ISNULL(A.IO_AMT,0) AS IO_AMT
				, ISNULL(D.TOT_WGHT, 0) AS TOT_WGHT
				, '첨부서류~' AS DOCUMENT_REQ	
				, E.GROUP_NO
				, (CASE WHEN E.LAND_GB IS NULL THEN 0 ELSE E.LAND_GB END ) AS LAND_GB			
			FROM LIST AS A
			LEFT OUTER JOIN CD_PARTNER_MST AS B ON A.VEN_CODE = B.VEN_CODE
			LEFT OUTER JOIN CD_PRODUCT_CMN AS C ON A.SCAN_CODE = C.SCAN_CODE
			LEFT OUTER JOIN (	
					SELECT ORD_NO, SUM(ISNULL(B.GROSS_WGHT - B.UNLOAD_WGHT, 0)) AS TOT_WGHT
				FROM PO_SCALE AS B GROUP BY ORD_NO
			)  AS D ON A.ORD_NO = D.ORD_NO
			LEFT OUTER JOIN PO_SCALE_GROUP AS E ON A.ORD_NO = E.ORD_NO
			ORDER BY A.IO_GB DESC, A.ORD_NO_PARENT DESC
			OFFSET @P_PAGE_INDEX ROW
			FETCH NEXT @P_TOT_PAGE_ROW ROWS ONLY
		 ) AS T1 ORDER BY T1.IO_GB DESC, T1.ORD_NO_PARENT DESC, LAND_GB



	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

