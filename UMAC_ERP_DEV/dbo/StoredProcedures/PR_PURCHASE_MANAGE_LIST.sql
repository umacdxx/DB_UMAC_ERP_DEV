/*
-- 생성자 :	강세미
-- 등록일	:	2023.03.06
-- 설 명	:	발주서관리 조회
-- 수정자	:	2024.03.27 이동호 - 튜닝(성능이슈 개선) 
				2024.10.08 최수민 - 검색조건 [제품구분] 추가
				2024.11.29 강세미 - 배차여부 수정
				2024.12.16 강세미 - ITM_QTY(품목 수) -> ITM_NAME(제품명)으로 변경
-- 실행문	: 
EXEC PR_PURCHASE_MANAGE_LIST '','','','','1','6','20240501','20240529'
*/
CREATE PROCEDURE [dbo].[PR_PURCHASE_MANAGE_LIST]
( 
	@P_VEN_CODE			NVARCHAR(7) = '',		-- 거래처코드
	@P_ORD_NO			NVARCHAR(11) = '',		-- 주문번호
	@P_SCAN_CODE		NVARCHAR(14) = '',		-- 스캔코드
	@P_PUR_STAT			NVARCHAR(2) = '',		-- 발주상태
	@P_DT_GB			NVARCHAR(1) = '',		-- 조회일자 구분 1: 입고예정일, 2: 발주날짜, 3:입고날짜
	@P_ITM_GB			NVARCHAR(8) = '',		-- 제품구분
	@P_START_DT			NVARCHAR(8) = '',		-- 조회시작일자
	@P_END_DT			NVARCHAR(8) = ''		-- 조회종료일자
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
	BEGIN TRY 

		SET @P_VEN_CODE = ISNULL(@P_VEN_CODE, '')
		SET @P_ORD_NO = ISNULL(@P_ORD_NO, '')
		SET @P_SCAN_CODE = ISNULL(@P_SCAN_CODE, '')
		SET @P_PUR_STAT = ISNULL(@P_PUR_STAT, '')
		SET @P_DT_GB = ISNULL(@P_DT_GB, '')
		SET @P_ITM_GB = ISNULL(@P_ITM_GB, '')
		SET @P_START_DT = ISNULL(@P_START_DT, '')
		SET @P_END_DT = ISNULL(@P_END_DT, '')

		SELECT ROW_NUMBER() OVER(ORDER BY A.ORD_NO DESC) AS ROW_NUM
				 , A.ORD_NO
				 , A.ORD_DT
				 , A.DELIVERY_EXP_DT
				 , A.DELIVERY_IN_DT
				 , A.ORD_AMT
				 , A.PUR_TOTAL_AMT
				 , A.VEN_CODE
				 , A.PUR_STAT
				 , A.PUR_CFM
				 , CASE WHEN A.TRANS_YN = 'F' THEN 'FNR배차' WHEN A.TRANS_YN = 'Y' THEN '일반배차' ELSE '배차불필요' END AS TRANS_YN		 
				 , A.PUR_TOTAL_WPRC
				 , B.ITM_QTY
				 , B.TOT_ORD_QTY
				 , B.TOT_ORD_WT
				 , B.TOT_PUR_QTY
				 , B.TOT_PUR_WT
				 , B.ORD_TOTAL_WPRC
				 , B.ITM_NAME_LIST
				 , C.VEN_NAME
				 , D.CD_NM AS PUR_STAT_NM
				 , G.ITM_NAME + (CASE WHEN B.ITM_QTY > 1 THEN ' 외 ' + CAST(B.ITM_QTY - 1 AS VARCHAR) + '건' ELSE '' END) AS ITM_NAME	
		FROM PO_PURCHASE_HDR AS A INNER JOIN (
				SELECT 
					A.ORD_NO, 
					COUNT(A.ORD_NO) AS ITM_QTY, 
					SUM(CASE WHEN C.WEIGHT_GB = 'QTY' THEN B.ORD_QTY ELSE 0 END) AS TOT_ORD_QTY,
					SUM(CASE WHEN C.WEIGHT_GB = 'WT' THEN B.ORD_QTY ELSE 0 END) AS TOT_ORD_WT,
					SUM(CASE WHEN C.WEIGHT_GB = 'QTY' THEN B.PUR_QTY ELSE 0 END) AS TOT_PUR_QTY,
					SUM(CASE WHEN C.WEIGHT_GB = 'WT' THEN B.PUR_QTY ELSE 0 END) AS TOT_PUR_WT,
					SUM(B.ORD_TOTAL_WPRC) AS ORD_TOTAL_WPRC,
					STRING_AGG(C.ITM_NAME, ', ') AS ITM_NAME_LIST,
					MAX(B.SCAN_CODE) AS SCAN_CODE
					FROM PO_PURCHASE_HDR AS A 
						INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
						INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE	
							WHERE 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN @P_VEN_CODE <> '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 0 END )
							AND 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO = @P_ORD_NO THEN 1 ELSE 0 END )
							AND 1 = (CASE WHEN @P_PUR_STAT = '' THEN 1 WHEN @P_PUR_STAT <> '' AND A.PUR_STAT = @P_PUR_STAT THEN 1 ELSE 0 END )
							AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END)
							AND  (
								1 = (CASE WHEN @P_DT_GB = '1' AND A.DELIVERY_EXP_DT BETWEEN @P_START_DT AND @P_END_DT THEN 1 ELSE 0 END) OR
								1 = (CASE WHEN @P_DT_GB = '2' AND A.ORD_DT BETWEEN @P_START_DT AND @P_END_DT THEN 1 ELSE 0 END) OR
								1 = (CASE WHEN @P_DT_GB = '3' AND A.DELIVERY_IN_DT BETWEEN @P_START_DT AND @P_END_DT THEN 1 ELSE 0 END) 								
							)
							AND 1 = (CASE WHEN @P_ITM_GB = '' THEN 1 WHEN @P_ITM_GB <> '' AND C.ITM_GB = @P_ITM_GB THEN 1 ELSE 0 END)
				GROUP BY A.ORD_NO
			) AS B ON A.ORD_NO = B.ORD_NO
			INNER JOIN CD_PARTNER_MST AS C 
				ON C.VEN_CODE = A.VEN_CODE						
			LEFT OUTER JOIN TBL_COMM_CD_MST AS D
				ON D.CD_CL = 'PUR_STAT' AND A.PUR_STAT = D.CD_ID
			LEFT OUTER JOIN CD_PRODUCT_CMN AS G 
				ON B.SCAN_CODE = G.SCAN_CODE	

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

