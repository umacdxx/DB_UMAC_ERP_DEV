/*
-- 생성자 :	윤현빈
-- 등록일 :	2024.03.07
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 입출고 상세현황 리스트
-- 실행문 : EXEC PR_WMS_REPORT_DTL_LIST_TEST '', '20240201','20240303','20240201','20240303','','','','',100,0
-- EXEC PR_WMS_REPORT_DTL_LIST NULL, '20240501', '20240924','','','','','','',100,205400
-- 20240528 윤현빈 수정, merge index를 입출고 별 각각 하기 때문에 겹쳐지는 문제 발생, union all 후에 적용, 성능도 같이 개선됨
-- 20240923 윤현빈 수정, 일자가 모두 주문일자에 걸려있는데 입고,출고일자로 변경
*/
CREATE PROCEDURE [dbo].[PR_WMS_REPORT_DTL_LIST]
( 
	@P_IO_GB					INT				= 0,	-- 입출고구분 (입고:1, 출고:2)
	@P_FROM_ORD_DT				NVARCHAR(10) 	= '',	-- 주문(발주) 일자
	@P_TO_ORD_DT				NVARCHAR(10) 	= '',	-- 주문(발주) 일자
	@P_FROM_DELIVERY_REQ_DT 	NVARCHAR(10) 	= '',	-- 출고요청 일자
	@P_TO_DELIVERY_REQ_DT   	NVARCHAR(10) 	= '',	-- 출고요청 일자
	@P_VEN_CODE					NVARCHAR(50) 	= '',	-- 거래처명(코드)
	@P_ORD_NO					NVARCHAR(11) 	= '',	-- 주문(발주)번호
	@P_SCAN_CODE				NVARCHAR(14) 	= '',	-- 상품명(코드)
	@P_CLOSE_STAT				NVARCHAR(1) 		= '',	-- 매출입 확정여부 (Y, N)
	@P_TOT_PAGE_ROW				INT,
	@P_PAGE_INDEX				INT	
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	BEGIN TRY 
	
		-- 리스트 TOTAL COUNT 
		DECLARE @TOT_CNT INT = 0;

		--# TOTAL COUNT #	
		WITH TOTAL_CNT AS (
			SELECT COUNT(*) AS CNT
				FROM PO_ORDER_HDR AS A	
				INNER JOIN VIEW_ORDER_DTL_SAMPLE_SUM AS B ON A.ORD_NO = B.ORD_NO		
				WHERE 1=(CASE WHEN @P_IO_GB = 1 THEN 2 ELSE 1 END)
				  AND 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END ) 
				  --AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT				  
				  AND (@P_FROM_ORD_DT = '' OR (A.DELIVERY_DEC_DT BETWEEN @P_FROM_ORD_DT AND @P_TO_ORD_DT))
				  AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END )
				  --AND A.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT												
				  AND (@P_FROM_DELIVERY_REQ_DT = '' OR (A.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT))
				  AND 1=(CASE WHEN @P_CLOSE_STAT = '' THEN 1 WHEN @P_CLOSE_STAT <> '' AND A.CLOSE_STAT = @P_CLOSE_STAT THEN 1 ELSE 0 END)				  				  				  
				  AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
	
			UNION ALL 
			
			SELECT COUNT(*) AS CNT
				FROM PO_PURCHASE_HDR AS A	
				INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO
				WHERE 1 = (CASE WHEN @P_IO_GB = 2 THEN 2 ELSE 1 END)									
				  AND 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END )				  
				  --AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT
				  AND (@P_FROM_ORD_DT = '' OR (A.DELIVERY_IN_DT BETWEEN @P_FROM_ORD_DT AND @P_TO_ORD_DT))
				  AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END ) 
				  AND 1 = (CASE WHEN @P_CLOSE_STAT = '' THEN 1 WHEN @P_CLOSE_STAT <> '' AND A.CLOSE_STAT = @P_CLOSE_STAT THEN 1 ELSE 0 END)
				  AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
		)
			-- TOTLA COUNT 변수 SET
		SELECT @TOT_CNT = SUM(CNT) FROM TOTAL_CNT;	

		-- # LIST #	
		WITH LIST AS (
			SELECT 'O' AS IO_GB				
				  , C.ORD_NO
				  , A.DELIVERY_DEC_DT AS ORD_DT
				  , A.VEN_CODE
				  , A.ORD_STAT AS IO_STAT	
				  , A.CLOSE_STAT
				  , C.SCAN_CODE
				  , C.ORD_QTY
				  , C.ORD_SAMT AS ORD_AMT
				  , C.PICKING_QTY AS IO_QTY
				  , C.PICKING_SAMT AS IO_AMT				
			FROM PO_ORDER_HDR AS A INNER JOIN VIEW_ORDER_DTL_SAMPLE_SUM AS C ON A.ORD_NO = C.ORD_NO
		   WHERE 1=(CASE WHEN @P_IO_GB = 1 THEN 2 ELSE 1 END)
			 AND 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END ) 				  
			 --AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT
			 AND (@P_FROM_ORD_DT = '' OR (A.DELIVERY_DEC_DT BETWEEN @P_FROM_ORD_DT AND @P_TO_ORD_DT))
			 AND 1=(CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END )
			 --AND A.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT												
			 AND (@P_FROM_DELIVERY_REQ_DT = '' OR (A.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT))
			 AND 1=(CASE WHEN @P_CLOSE_STAT = '' THEN 1 WHEN @P_CLOSE_STAT <> '' AND A.CLOSE_STAT = @P_CLOSE_STAT THEN 1 ELSE 0 END)
			 AND 1=(CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND C.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
			UNION ALL
			SELECT 'I' AS IO_GB
				  , C.ORD_NO
				  , A.DELIVERY_IN_DT AS ORD_DT
				  , A.VEN_CODE 				  
				  , A.PUR_STAT AS IO_STAT
				  , A.CLOSE_STAT
				  , C.SCAN_CODE
				  , C.ORD_QTY
				  , C.ORD_WAMT AS ORD_AMT
				  , C.PUR_QTY AS IO_QTY
				  , C.PUR_WAMT AS IO_AMT				  
			FROM PO_PURCHASE_HDR AS A INNER JOIN PO_PURCHASE_DTL AS C ON A.ORD_NO = C.ORD_NO								
		   WHERE 1=(CASE WHEN @P_IO_GB = 2 THEN 2 ELSE 1 END)									
		     AND 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END )				  
		     --AND A.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT								
			 AND (@P_FROM_ORD_DT = '' OR (A.DELIVERY_IN_DT BETWEEN @P_FROM_ORD_DT AND @P_TO_ORD_DT))
		     AND 1=(CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND @P_VEN_CODE = A.VEN_CODE THEN 1 ELSE 0 END ) 
		     AND 1=(CASE WHEN @P_CLOSE_STAT = '' THEN 1 WHEN @P_CLOSE_STAT <> '' AND A.CLOSE_STAT = @P_CLOSE_STAT THEN 1 ELSE 0 END)
		     AND 1=(CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND C.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
		), SET_INDEX_LIST AS (
			SELECT A.*
			     , DENSE_RANK() OVER(ORDER BY A.IO_GB, A.ORD_NO) AS MERGE_INDEX
				FROM LIST AS A
		), MAIN AS (
				SELECT A.ORD_DT
					 , CASE WHEN A.IO_GB = 'I' THEN '입고' ELSE '출고' END AS IO_GB
					 , IIF(A.CLOSE_STAT = 'Y', '확정', '미확정')  AS CLOSE_STAT					 
					 , A.ORD_NO						
					 , A.VEN_CODE
					 , ISNULL(B.VEN_NAME, '') AS VEN_NAME
					 , ISNULL(TOT_WGHT, 0) AS VHCL_WGHT
					 , A.SCAN_CODE
					 , C.ITM_NAME
					 , ISNULL(A.ORD_QTY, 0) AS ORD_QTY
					 , ISNULL(A.ORD_AMT, 0) AS ORD_AMT
					 , ISNULL(A.IO_QTY, 0) AS IO_QTY
					 , ISNULL(A.IO_AMT, 0) AS IO_AMT
					 , ISNULL(IIF(A.ORD_QTY = 0, 0, ROUND(CONVERT(float, A.IO_QTY) / CONVERT(float, A.ORD_QTY) * 100, 1)), 0) AS IO_RATE
					 , A.MERGE_INDEX	
					 , C.WEIGHT_GB
					FROM SET_INDEX_LIST AS A
						LEFT OUTER JOIN CD_PRODUCT_CMN AS C ON A.SCAN_CODE = C.SCAN_CODE
						LEFT OUTER JOIN CD_PARTNER_MST AS B ON A.VEN_CODE = B.VEN_CODE
						LEFT OUTER JOIN (	
							SELECT ORD_NO, SUM(ISNULL(B.GROSS_WGHT - B.UNLOAD_WGHT, 0)) AS TOT_WGHT
								FROM PO_SCALE AS B GROUP BY ORD_NO
						)  AS D ON A.ORD_NO = D.ORD_NO			
					ORDER BY A.IO_GB, A.ORD_NO
						OFFSET @P_PAGE_INDEX ROW
					FETCH NEXT @P_TOT_PAGE_ROW ROWS ONLY
			)
			SELECT *, COUNT(*) OVER(PARTITION BY MERGE_INDEX) AS MERGE_CNT, @TOT_CNT AS TOT_CNT FROM MAIN AS A
		
	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

