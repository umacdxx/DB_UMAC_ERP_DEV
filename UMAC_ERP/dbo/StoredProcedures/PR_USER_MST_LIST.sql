/*
-- 생성자 :	강세미
-- 등록일 :	2023.01.03
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 사용자 마스터 리스트 출력
-- 실행문 : 
EXEC PR_USER_MST_LIST '관리자', 'ROLE01', '', ''
*/
CREATE PROCEDURE [dbo].[PR_USER_MST_LIST]
( 
	@P_USER_NM		   NVARCHAR(20) = '',	-- 사용자명
	@P_ROLE_ID		NVARCHAR(6) = '',		-- 권한그룹
	@P_JOB_FLAG		   NVARCHAR(2) = '',		-- 재직구분
	@P_DEPT_CODE		NVARCHAR(25) = ''		-- 부서코드
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	SET @P_USER_NM = ISNULL(@P_USER_NM, '')
	SET @P_ROLE_ID = ISNULL(@P_ROLE_ID, '')
	SET @P_JOB_FLAG = ISNULL(@P_JOB_FLAG, '')
	SET @P_DEPT_CODE = ISNULL(@P_DEPT_CODE, '')
	 
	BEGIN TRY 
	EXEC UMAC_CERT_OPEN_KEY; -- OPEN
		SELECT * FROM (
			 SELECT ROW_NUMBER() OVER(ORDER BY USER_ID) AS ROW_NUM
					, A.USER_ID
					, A.USER_NM
					, A.ROLE_ID
					, D.ROLE_NM
					, A.DEPT_CODE
					, B.DEPT_NAME
					, A.POSITION
					, C.CD_NM AS POSITION_NM
					, A.PWD_COUNT
					, A.JOB_FLAG
					--, A.MOBIL_NO
					, DBO.GET_DECRYPT(A.MOBIL_NO) AS MOBIL_NO
					, E.CD_NM AS JOB_FLAG_NM
				FROM TBL_USER_MST AS A
					INNER JOIN TBL_DEPT_MST AS B 
						ON A.DEPT_CODE = B.DEPT_CODE
					INNER JOIN TBL_COMM_CD_MST AS C
						ON C.CD_CL = 'POSITION' AND A.POSITION = C.CD_ID
					INNER JOIN (SELECT ROLE_ID, ROLE_NM FROM TBL_ROLE_MST) AS D 
						ON A.ROLE_ID = D.ROLE_ID
					INNER JOIN TBL_COMM_CD_MST AS E
						ON E.CD_CL = 'JOB_FLAG' AND A.JOB_FLAG = E.CD_ID
			  WHERE (A.USER_NM = (CASE WHEN @P_USER_NM <> '' THEN @P_USER_NM ELSE A.USER_NM END) 
				  OR A.USER_ID = (CASE WHEN @P_USER_NM <> '' THEN @P_USER_NM ELSE A.USER_ID END))
				 AND A.ROLE_ID = (CASE WHEN @P_ROLE_ID <> '' THEN @P_ROLE_ID ELSE A.ROLE_ID END)
				 AND A.JOB_FLAG = (CASE WHEN @P_JOB_FLAG <> '' THEN @P_JOB_FLAG ELSE A.JOB_FLAG END)
				 AND A.DEPT_CODE = (CASE WHEN @P_DEPT_CODE <> '' THEN @P_DEPT_CODE ELSE A.DEPT_CODE END)
		) TBL
	EXEC UMAC_CERT_CLOSE_KEY -- CLOSE
	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

