/*
-- 생성자 :	강세미
-- 등록일 :	2023.02.23
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 판매(주문)이력 조회
-- 실행문 : 
EXEC PR_ORDER_HIS_LIST 'UM29997', '0', '0'
*/
CREATE PROCEDURE [dbo].[PR_ORDER_HIS_LIST]
( 
	@P_VEN_CODE	NVARCHAR(7) = '',   -- 거래처코드
	@P_TOT_PAGE_ROW INT = 100,			-- 한 페이지에 나타나는 row 수
	@P_PAGE_INDEX INT 				-- page row 인덱스
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 
	BEGIN TRY 

		SET @P_TOT_PAGE_ROW = ISNULL(NULLIF(@P_TOT_PAGE_ROW, 0), 100);
		DECLARE @TOT_CNT INT = 0;

		--# TOTAL COUNT #	 
		SELECT @TOT_CNT = COUNT(A.ORD_NO)
		FROM PO_ORDER_HDR AS A INNER JOIN (
					SELECT A.ORD_NO
						FROM PO_ORDER_HDR AS A	
							INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
							WHERE A.VEN_CODE = @P_VEN_CODE
								AND A.ORD_STAT >= '35'
					GROUP BY A.ORD_NO
		) B ON A.ORD_NO = B.ORD_NO	 
			 
		SELECT ROW_NUMBER() OVER(ORDER BY T1.ORD_NO DESC, T1.SEQ) + @P_PAGE_INDEX AS ROW_NUM,
			   @TOT_CNT,
			   T1.*
		FROM(   
		  SELECT A.ORD_NO,
				 A.SEQ,
				 A.SCAN_CODE,
				 A.ORD_QTY,
				 A.ORD_SPRC,
				 A.ORD_SVAT,
				 A.ORD_SAMT,
				 ROUND(A.PICKING_SPRC, 0) AS PICKING_SPRC,
				 ROUND(A.PICKING_SVAT, 0) AS PICKING_SVAT,
				 A.PICKING_SAMT,
				 B.ORD_DT,
				 B.DELIVERY_REQ_DT,
				 B.DELIVERY_DEC_DT,
				 B.DELIVERY_CODE,
				 B.VEN_CODE,
				 B.ARRIVAL_REQ_DT,
				 D.WEIGHT_GB,
				 D.ITM_NAME,
				 D.ITM_NAME_DETAIL,
				 D.UNIT_CAPACITY,
				 UCOM.CD_NM AS UNIT_NM,
				 ISNULL(D.BASE_SPRC,0) AS BASE_SPRC,
				 ISNULL(D.BASE_SVAT,0) AS BASE_SVAT,
				 E.TRANS_SECTION,
				 G.CD_NM AS TAX_GB_NM,
				 COUNT(*) OVER(PARTITION BY 1) AS TOT_CNT,
				 CASE WHEN D.ITM_FORM = '2' THEN ISNULL(H.BOX_EACH_QTY,0) ELSE ISNULL(H.CUR_INV_QTY,0) END AS CUR_INV_QTY,
				 CASE WHEN D.ITM_FORM = '2' THEN ISNULL(H.BOX_EACH_QTY,0) - ISNULL(I.TOTAL_ORD_QTY, 0) ELSE ISNULL(H.CUR_INV_QTY,0) - ISNULL(I.TOTAL_ORD_QTY, 0) END AS AVL_INV_QTY
		  FROM PO_ORDER_DTL AS A
		  	INNER JOIN PO_ORDER_HDR AS B
				ON A.ORD_NO = B.ORD_NO 
			LEFT OUTER JOIN PO_ORDER_SAMPLE AS C
				ON A.ORD_NO = C.ORD_NO AND A.SCAN_CODE = C.SCAN_CODE
			INNER JOIN CD_PRODUCT_CMN AS D
				ON A.SCAN_CODE = D.SCAN_CODE
			LEFT OUTER JOIN CD_DELIVERY_PRICE AS E
				ON B.DELIVERY_PRICE_SEQ = E.SEQ
			LEFT OUTER JOIN TBL_COMM_CD_MST AS G
				ON G.CD_CL = 'TAX_GB' AND G.CD_ID = C.TAX_GB
			LEFT OUTER JOIN TBL_COMM_CD_MST AS UCOM
						ON UCOM.CD_CL = 'UNIT' AND D.UNIT = UCOM.CD_ID
			LEFT OUTER JOIN (
							SELECT A.SCAN_CODE
									, A.ITM_CODE
									, D.CUR_INV_QTY
									, C.CUR_INV_QTY AS BOX_EACH_QTY
								FROM CD_PRODUCT_CMN AS A
								LEFT OUTER JOIN IV_PRODUCT_STAT AS D ON A.SCAN_CODE = D.SCAN_CODE
								LEFT OUTER JOIN CD_BOX_MST AS B ON A.ITM_CODE = B.BOX_CODE
								LEFT OUTER JOIN IV_PRODUCT_STAT AS C ON B.ITM_CODE = C.ITM_CODE
						) AS H
		 ON A.SCAN_CODE = H.SCAN_CODE
		 LEFT OUTER JOIN VIEW_TOTAL_ORDER_QTY AS I ON D.ITM_CODE = I.ITM_CODE
		  WHERE B.VEN_CODE = @P_VEN_CODE
			AND B.ORD_STAT >= '35'
		  ORDER BY A.ORD_NO DESC,A.SEQ ASC
		  OFFSET @P_PAGE_INDEX ROW
		  FETCH NEXT @P_TOT_PAGE_ROW ROWS ONLY
		)AS T1 ORDER BY T1.ORD_NO DESC, T1.SEQ

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

