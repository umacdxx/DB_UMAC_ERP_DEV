/*ORD_STAT
-- 생성자 :	윤현빈
-- 등록일 :	2024.03.08
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 입출고 현황 리스트
-- 실행문 : EXEC PR_WMS_REPORT_HDR_LIST 'O','20240101','20240315','20240101','20240315','','','','','',30,0
*/
CREATE PROCEDURE [dbo].[PR_WMS_REPORT_HDR_LIST_BAK]
( 
	@P_GUBUN				NVARCHAR(1)		= '',	-- 입출고구분
	@P_FROM_ORD_DT			NVARCHAR(10)	= '',	-- 주문(발주) 일자
	@P_TO_ORD_DT			NVARCHAR(10)	= '',	-- 주문(발주) 일자
	@P_FROM_DELIVERY_REQ_DT	NVARCHAR(10)	= '',	-- 출고요청 일자
	@P_TO_DELIVERY_REQ_DT	NVARCHAR(10)	= '',	-- 출고요청 일자
	@P_ORD_STAT				NVARCHAR(30)	= '',	-- 출고상태
	@P_PUR_STAT				NVARCHAR(30)	= '',	-- 입고상태
	@P_VEN_CODE				NVARCHAR(50)	= '',	-- 거래처명(코드)
	@P_ORD_NO				NVARCHAR(11)	= '',	-- 주문(발주)번호
	@P_SCAN_CODE			NVARCHAR(14)	= '',	-- 상품명(코드)
	@P_TOT_PAGE_ROW			INT,					
	@P_PAGE_INDEX			INT
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	BEGIN TRY 
		WITH W_ORD_PUR AS (
            SELECT HD.ORD_DT
                 , 'O' AS IO_GB
                 , ISNULL(HD.ORD_CFM, 'N') AS CONFIRM_GB
                 , HD.ORD_NO
                 , HD.VEN_CODE
				 , HD.DELIVERY_REQ_DT
				 , CMM.CD_NM AS STATUS
				 , CONCAT(HD.R_ADDR, ' ', HD.R_ADDR_DTL) AS ADDR
                 , DT.SCAN_CODE
                 , DT.ORD_QTY
                 , DT.ORD_SAMT AS ORD_AMT
                 , DT.PICKING_QTY AS IO_QTY
                 , DT.PICKING_SAMT AS IO_AMT
				FROM PO_ORDER_HDR AS HD
				INNER JOIN PO_ORDER_DTL AS DT
					ON HD.ORD_NO = DT.ORD_NO
				INNER JOIN TBL_COMM_CD_MST CMM
					ON HD.ORD_STAT = CMM.CD_ID
				   AND CMM.CD_CL = 'ORD_STAT'
			   WHERE 1 = (CASE WHEN @P_GUBUN = 'I' THEN 2 ELSE 1 END)
		     AND HD.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT
			 AND HD.DELIVERY_REQ_DT BETWEEN @P_FROM_DELIVERY_REQ_DT AND @P_TO_DELIVERY_REQ_DT
			 AND HD.ORD_STAT = (CASE WHEN @P_ORD_STAT <> '' THEN @P_ORD_STAT ELSE HD.ORD_STAT END)

			UNION ALL
			SELECT HD.ORD_DT
				 , 'I' AS IO_GB
				 , ISNULL(HD.PUR_CFM, 'N') AS CONFIRM_GB
				 , HD.ORD_NO
				 , HD.VEN_CODE
				 , '' AS DELIVERY_REQ_DT
				 , CMM.CD_NM AS STATUS
				 , '' AS ADDR
				 , DT.SCAN_CODE
				 , DT.ORD_QTY
				 , DT.ORD_WAMT AS ORD_AMT
				 , DT.PUR_QTY AS IO_QTY
				 , DT.PUR_WAMT AS IO_AMT
				FROM PO_PURCHASE_HDR AS HD
				INNER JOIN PO_PURCHASE_DTL AS DT
					ON HD.ORD_NO = DT.ORD_NO
				INNER JOIN TBL_COMM_CD_MST CMM
					ON HD.PUR_STAT = CMM.CD_ID
				   AND CMM.CD_CL = 'PUR_STAT'
			   WHERE 1 = (CASE WHEN @P_GUBUN = 'O' THEN 2 ELSE 1 END)
				 AND HD.ORD_DT BETWEEN  @P_FROM_ORD_DT AND @P_TO_ORD_DT
				 AND HD.PUR_STAT = (CASE WHEN @P_PUR_STAT <> '' THEN @P_PUR_STAT ELSE HD.PUR_STAT END)
    ), W_MAIN AS (
			SELECT ROW_NUMBER() OVER(ORDER BY W.IO_GB DESC, W.CONFIRM_GB DESC, W.ORD_NO DESC) AS ROW_NUM
			     , CASE WHEN W.IO_GB = 'I' THEN '입고' ELSE '출고' END AS IO_GB
				 , IIF(W.CONFIRM_GB = 'Y', '확정', '미확정')  AS CONFIRM_GB
				 , W.ORD_NO
				 , W.VEN_CODE
				 , ISNULL(VEN.VEN_NAME, '') AS VEN_NAME
				 , W.DELIVERY_REQ_DT
				 , CASE WHEN COUNT(*) = 1 AND COUNT(*) > 0 THEN MAX(ITM.ITM_NAME)
					    ELSE CONCAT(MAX(ITM.ITM_NAME) , '외 ', CONVERT(varchar(10), COUNT(*)-1), '건') END AS ITM_NAME
				 , W.ADDR
				 , W.STATUS
				 , SUM(ISNULL(PO.GROSS_WGHT - PO.UNLOAD_WGHT, 0)) AS TOT_WGHT
				 , COUNT(ITM.ITM_NAME) AS ITM_CNT
				 , SUM(ISNULL(W.IO_AMT, 0)) AS IO_AMT
				 , '첨부서류~' AS DOCUMENT_REQ
				 , COUNT(*) OVER(PARTITION BY 1) AS TOT_CNT
				FROM W_ORD_PUR AS W
				LEFT OUTER JOIN CD_PARTNER_MST AS VEN
					ON W.VEN_CODE = VEN.VEN_CODE
				LEFT OUTER JOIN PO_SCALE AS PO
					ON W.ORD_NO = PO.ORD_NO
				LEFT OUTER JOIN CD_PRODUCT_CMN AS ITM
					ON W.SCAN_CODE = ITM.SCAN_CODE
				WHERE 1=1
			   
				  AND (W.VEN_CODE LIKE '%'+(CASE WHEN @P_VEN_CODE <> '' THEN @P_VEN_CODE ELSE W.VEN_CODE END)+'%'
					OR VEN.VEN_NAME LIKE '%'+(CASE WHEN @P_VEN_CODE <> '' THEN @P_VEN_CODE ELSE VEN.VEN_NAME END)+'%'
				  )
				  AND W.ORD_NO LIKE '%' + (CASE WHEN @P_ORD_NO <> '' THEN @P_ORD_NO ELSE W.ORD_NO END) + '%'
				  AND (ITM.ITM_CODE LIKE '%'+(CASE WHEN @P_SCAN_CODE <> '' THEN @P_SCAN_CODE ELSE ITM.ITM_CODE END)+'%'
					OR W.SCAN_CODE LIKE '%'+(CASE WHEN @P_SCAN_CODE <> '' THEN @P_SCAN_CODE ELSE W.SCAN_CODE END)+'%'
					OR ITM.ITM_NAME LIKE '%'+(CASE WHEN @P_SCAN_CODE <> '' THEN @P_SCAN_CODE ELSE ITM.ITM_NAME END)+'%'
				  )
				 GROUP BY W.IO_GB, W.CONFIRM_GB, W.ORD_NO, W.VEN_CODE, VEN.VEN_NAME, W.DELIVERY_REQ_DT, W.STATUS, W.ADDR
				ORDER BY W.IO_GB, W.CONFIRM_GB, W.ORD_NO
				OFFSET @P_PAGE_INDEX ROW
				FETCH NEXT @P_TOT_PAGE_ROW ROWS ONLY
	)
	SELECT W.ROW_NUM
	     , W.IO_GB
		 , W.CONFIRM_GB
		 , W.ORD_NO
		 , W.VEN_CODE
		 , W.VEN_NAME
		 , W.DELIVERY_REQ_DT
		 , W.ITM_NAME
		 , W.ADDR
		 , W.STATUS
		 , W.TOT_WGHT
		 , W.ITM_CNT
		 , W.IO_AMT
		 , W.DOCUMENT_REQ
	     , W.TOT_CNT
		FROM W_MAIN AS W


	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

