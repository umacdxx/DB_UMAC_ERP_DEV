
/*
-- 생성자 :	강세미
-- 등록일 :	2024.08.27
-- 수정일 : 2024.09.10 강세미: 매출입상태 조건 제거
			2024.12.18 강세미: 타차중량 최근 수정자 추가
-- 설 명  : 타차중량 일괄입력 리스트(입출고확정의 벌크제품건)
-- 실행문 : EXEC PR_WMS_OFFICIAL_WGHT_LIST '','20240821','20240828','','','',100,0
*/
CREATE PROCEDURE [dbo].[PR_WMS_OFFICIAL_WGHT_LIST]
( 
	@P_IO_GB					INT				= 0,	-- 입출고구분(입고:1, 출고:2)
	@P_FROM_IO_DT				NVARCHAR(10)	= '',	-- 입출고 일자
	@P_TO_IO_DT					NVARCHAR(10)	= '',	-- 입출고 일자
	@P_VEN_CODE					NVARCHAR(50)	= '',	-- 거래처명(코드)
	@P_ORD_NO					NVARCHAR(11)	= '',	-- 주문(발주)번호
	@P_SCAN_CODE				NVARCHAR(14)	= '',	-- 상품명(코드)
	@P_MGNT_USER_ID				NVARCHAR(20)    = '',	-- 담당자아이디
	@P_TOT_PAGE_ROW				INT,					
	@P_PAGE_INDEX				INT
)
AS
BEGIN

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;


	BEGIN TRY 

		-- 리스트 TOTAL COUNT 
		DECLARE @TOT_CNT INT = 0;

		SET @P_IO_GB = ISNULL(@P_IO_GB, 0)

		 --# TOTAL COUNT #			
		SELECT @TOT_CNT = SUM(CNT) FROM (
		
			SELECT COUNT(A.ORD_NO) AS CNT FROM PO_ORDER_HDR AS A 
				INNER JOIN (
					SELECT A.ORD_NO, A.DELIVERY_DEC_DT
						FROM PO_ORDER_HDR AS A	
							INNER JOIN (SELECT 
											MAX(A.SCAN_CODE) AS SCAN_CODE,
											A.ORD_NO
											FROM PO_ORDER_DTL AS A
											GROUP BY A.ORD_NO
							) AS B ON A.ORD_NO = B.ORD_NO
							INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
							INNER JOIN CD_PARTNER_MST AS D ON A.VEN_CODE = D.VEN_CODE
							WHERE 1=(CASE WHEN @P_IO_GB = 1 THEN 2 ELSE 1 END)
									AND 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END ) 
									AND A.DELIVERY_DEC_DT BETWEEN  @P_FROM_IO_DT AND @P_TO_IO_DT
									AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 0 END )						
									AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END)
									AND 1 = (CASE WHEN @P_MGNT_USER_ID = '' THEN 1 WHEN @P_MGNT_USER_ID = 'ETC' AND (D.MGNT_USER_ID IS NULL OR D.MGNT_USER_ID = '') THEN 1 WHEN @P_MGNT_USER_ID <> '' AND D.MGNT_USER_ID = @P_MGNT_USER_ID THEN 1 ELSE 0 END)
									AND (A.ORD_STAT = '35')
									AND (C.ITM_FORM = '3' OR C.ITM_FORM = '4')
								GROUP BY A.ORD_NO, A.DELIVERY_DEC_DT

			)  AS B ON A.ORD_NO = B.ORD_NO
			
			UNION ALL 

			SELECT COUNT(A.ORD_NO) AS CNT FROM PO_PURCHASE_HDR AS A 
				INNER JOIN (
					SELECT A.ORD_NO, A.DELIVERY_IN_DT
						FROM PO_PURCHASE_HDR AS A	
							INNER JOIN (SELECT 
											MAX(A.SCAN_CODE) AS SCAN_CODE,
											A.ORD_NO
											FROM PO_PURCHASE_DTL AS A
											GROUP BY A.ORD_NO
							) AS B ON A.ORD_NO = B.ORD_NO
							INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
							INNER JOIN CD_PARTNER_MST AS D ON A.VEN_CODE = D.VEN_CODE
							WHERE 1 = (CASE WHEN @P_IO_GB = 2 THEN 2 ELSE 1 END)									
									AND 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END )
									AND A.DELIVERY_IN_DT BETWEEN  @P_FROM_IO_DT AND @P_TO_IO_DT								
									AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 0 END ) 		
									AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
									AND 1 = (CASE WHEN @P_MGNT_USER_ID = '' THEN 1 WHEN @P_MGNT_USER_ID = 'ETC' AND (D.MGNT_USER_ID IS NULL OR D.MGNT_USER_ID = '') THEN 1 WHEN @P_MGNT_USER_ID <> '' AND D.MGNT_USER_ID = @P_MGNT_USER_ID THEN 1 ELSE 0 END)
									AND (A.PUR_STAT = '35')
									AND (C.ITM_FORM = '3' OR C.ITM_FORM = '4')
					GROUP BY A.ORD_NO, A.DELIVERY_IN_DT
			)  AS B ON A.ORD_NO = B.ORD_NO		

		) AS TOTAL_CNT;

		PRINT(@TOT_CNT)
		
			
		-- # LIST #	
				
		SELECT 
			ROW_NUMBER() OVER(ORDER BY T1.IO_GB DESC, T1.IO_DT, T1.ORD_NO_PARENT DESC) + @P_PAGE_INDEX AS ROW_NUM,
			@TOT_CNT AS TOT_CNT,
			T1.*
		FROM (

			SELECT 			
				CASE WHEN A.IO_GB = 1 THEN '입고' ELSE '출고' END AS IO_GB
				, A.ORD_NO
				, A.ORD_NO_PARENT
				, A.VEN_CODE
				, ISNULL(B.VEN_NAME, '') AS VEN_NAME
				, A.SCAN_CODE
				, A.TRANS_YN
				, A.STATUS_CD
				, A.IO_DT
				, A.[STATUS]
				, C.ITM_NAME
				, C.ITM_FORM
				, C.WEIGHT_GB
				, E.GROUP_NO
				, (CASE WHEN E.LAND_GB IS NULL THEN 0 ELSE E.LAND_GB END ) AS LAND_GB	
				, ISNULL(F.OFFICIAL_WGHT, 0) AS OFFICIAL_WGHT
				, F.NET_WGHT
				, F.CAR_NO
				--, ISNULL((CASE WHEN ISNULL(F.OFFICIAL_WGHT, 0) = 0 THEN F.NET_WGHT ELSE F.OFFICIAL_WGHT END), 0) AS END_WGHT
				, ISNULL(F.CLOSE_WGHT, 0) AS END_WGHT
				, FORMAT(F.OFFICIAL_WGHT_DT, 'yyyyMMdd') AS OFFICIAL_WGHT_DT
				, G.DELIVERY_NAME
				, H.USER_NM AS OFFICIAL_WGHT_UEMP_NM
			FROM (
		
				SELECT A.ORD_DT
					, 2 AS IO_GB
					, A.ORD_STAT AS IO_STAT
					, A.ORD_NO
					, A.ORD_NO_PARENT
					, A.VEN_CODE	
					, A.TRANS_YN
					, A.ORD_STAT AS STATUS_CD
					, A.DELIVERY_CODE
					, A.DELIVERY_DEC_DT AS IO_DT
					, B.SCAN_CODE
					, C.CD_NM AS [STATUS]
				FROM PO_ORDER_HDR AS A INNER JOIN (
					SELECT A.ORD_NO,
						   MAX(B.SCAN_CODE) AS SCAN_CODE
						FROM PO_ORDER_HDR AS A	
							INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO												
							WHERE 1=(CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END ) 
									AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 0 END )						
									AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
									AND 1 = (CASE WHEN @P_IO_GB = 1 THEN 2 ELSE 1 END)
									AND (A.ORD_STAT = '35')
								GROUP BY A.ORD_NO
				)  AS B ON A.ORD_NO = B.ORD_NO				
				INNER JOIN TBL_COMM_CD_MST AS C ON C.CD_CL = 'ORD_STAT' AND A.ORD_STAT = C.CD_ID
						
				UNION ALL 

				SELECT A.ORD_DT
					, 1 AS IO_GB
					, A.PUR_STAT AS IO_STAT
					, A.ORD_NO
					, A.ORD_NO AS ORD_NO_PARENT
					, A.VEN_CODE		
					, A.TRANS_YN
					, A.PUR_STAT AS STATUS_CD
					, A.DELIVERY_CODE
					, A.DELIVERY_IN_DT AS IO_DT
					, B.SCAN_CODE
					, C.CD_NM AS [STATUS]
				FROM PO_PURCHASE_HDR AS A INNER JOIN (
						SELECT A.ORD_NO,
						   MAX(B.SCAN_CODE) AS SCAN_CODE
							FROM PO_PURCHASE_HDR AS A	
								INNER JOIN PO_PURCHASE_DTL AS B ON A.ORD_NO = B.ORD_NO													
								WHERE 1 = (CASE WHEN @P_ORD_NO = '' THEN 1 WHEN @P_ORD_NO <> '' AND A.ORD_NO LIKE '%'+@P_ORD_NO+'%' THEN 1 ELSE 0 END )
										AND 1 = (CASE WHEN @P_VEN_CODE = '' THEN 1 WHEN  @P_VEN_CODE <> '' AND A.VEN_CODE = @P_VEN_CODE THEN 1 ELSE 0 END ) 			
										AND 1 = (CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE <> '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 0 END) 
										AND 1 = (CASE WHEN @P_IO_GB = 2 THEN 2 ELSE 1 END)
										AND (A.PUR_STAT = '35')
						GROUP BY A.ORD_NO
				)  AS B ON A.ORD_NO = B.ORD_NO
				INNER JOIN TBL_COMM_CD_MST AS C ON C.CD_CL = 'PUR_STAT' AND A.PUR_STAT = C.CD_ID
					
			) AS A
				INNER JOIN CD_PARTNER_MST AS B ON A.VEN_CODE = B.VEN_CODE
				INNER JOIN CD_PRODUCT_CMN AS C ON A.SCAN_CODE = C.SCAN_CODE
				LEFT OUTER JOIN PO_SCALE_GROUP AS E ON A.ORD_NO = E.ORD_NO
				LEFT OUTER JOIN PO_SCALE AS F ON A.ORD_NO = F.ORD_NO
				LEFT OUTER JOIN CD_PARTNER_DELIVERY AS G ON A.VEN_CODE = G.VEN_CODE AND A.DELIVERY_CODE = G.DELIVERY_CODE
				LEFT OUTER JOIN TBL_USER_MST AS H ON F.OFFICIAL_WGHT_UEMP_ID = H.[USER_ID]
				WHERE 1 = (CASE WHEN @P_IO_GB > 0 AND A.IO_GB = @P_IO_GB THEN 1 WHEN @P_IO_GB = 0 THEN 1 ELSE 2 END)	
					 AND (C.ITM_FORM = '3' OR C.ITM_FORM = '4')
					 AND A.IO_DT BETWEEN  @P_FROM_IO_DT AND @P_TO_IO_DT
					 AND 1 = (CASE WHEN @P_MGNT_USER_ID = '' THEN 1 WHEN @P_MGNT_USER_ID = 'ETC' AND (B.MGNT_USER_ID IS NULL OR B.MGNT_USER_ID = '') THEN 1 WHEN @P_MGNT_USER_ID <> '' AND B.MGNT_USER_ID = @P_MGNT_USER_ID THEN 1 ELSE 0 END)
				ORDER BY A.IO_GB DESC, A.ORD_NO_PARENT DESC
				OFFSET @P_PAGE_INDEX ROW
				FETCH NEXT @P_TOT_PAGE_ROW ROWS ONLY

		) AS T1 ORDER BY T1.IO_GB DESC
			, T1.IO_DT
			, T1.ORD_NO_PARENT DESC
			, LAND_GB

		;
	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

