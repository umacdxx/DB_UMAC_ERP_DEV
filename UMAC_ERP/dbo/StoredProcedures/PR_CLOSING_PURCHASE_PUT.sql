
/*

-- 생성자 :	강세미
-- 등록일 :	2024.09.27
-- 설 명  : 월 매입마감 저장
-- 실행문 : 
EXEC PR_CLOSING_PURCHASE_PUT '[{"ISSUE_GB":"1", "ORD_NO":"2240923009", "CLOSE_DT": "20241001","CLOSE_REMARKS":"하하하", "CLOSE_DT_CHG_YN" : "Y"},
{"ISSUE_GB":"1", "ORD_NO":"2240923010", "CLOSE_DT": "20241001","CLOSE_REMARKS":"히히히", "CLOSE_DT_CHG_YN" : "Y"}]','admin'
*/
CREATE PROCEDURE [dbo].[PR_CLOSING_PURCHASE_PUT]
( 
	@P_JSONDT			VARCHAR(MAX) = '',
	@P_EMP_ID			NVARCHAR(20)				-- 아이디
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	DECLARE @RETURN_CODE	INT = 0										-- 리턴코드(저장완료)
	DECLARE @RETURN_MESSAGE NVARCHAR(MAX) = DBO.GET_ERR_MSG('0')		-- 리턴메시지
	
	BEGIN TRAN
	BEGIN TRY 
		DECLARE @TMP_ITEM TABLE (
				ORD_NO NVARCHAR(11),
				CLOSE_DT NVARCHAR(8),
				CLOSE_REMARKS NVARCHAR(2000),
				CLOSE_DT_CHG_YN NVARCHAR(1)
		)
		
		INSERT INTO @TMP_ITEM
		SELECT ORD_NO, CLOSE_DT, CLOSE_REMARKS, CLOSE_DT_CHG_YN
			FROM 
				OPENJSON ( @P_JSONDT )   
					WITH (    
						ORD_NO NVARCHAR(11) '$.ORD_NO',
						CLOSE_DT NVARCHAR(8) '$.CLOSE_DT',
						CLOSE_REMARKS NVARCHAR(2000) '$.CLOSE_REMARKS',
						CLOSE_DT_CHG_YN NVARCHAR(1) '$.CLOSE_DT_CHG_YN'
					)
				
		DECLARE CURSOR_REMARKS CURSOR FOR

		SELECT A.ORD_NO, A.CLOSE_DT, A.CLOSE_REMARKS, A.CLOSE_DT_CHG_YN
			FROM @TMP_ITEM A
			

		OPEN CURSOR_REMARKS

		DECLARE @P_ORD_NO NVARCHAR(11),
				@P_CLOSE_DT NVARCHAR(8),
				@P_CLOSE_REMARKS NVARCHAR(2000),
				@P_CLOSE_DT_CHG_YN NVARCHAR(1)

		FETCH NEXT FROM CURSOR_REMARKS INTO @P_ORD_NO, @P_CLOSE_DT, @P_CLOSE_REMARKS, @P_CLOSE_DT_CHG_YN

			WHILE(@@FETCH_STATUS=0)
			BEGIN
			
			-- ************************************************************
			-- PO_PURCHASE_HDR 업데이트
			-- ************************************************************
			UPDATE PO_PURCHASE_HDR 
			   SET CLOSE_REMARKS = @P_CLOSE_REMARKS,
				   CLOSE_DT = @P_CLOSE_DT, 
				   CLOSE_DT_CHG_YN = @P_CLOSE_DT_CHG_YN
			WHERE ORD_NO = @P_ORD_NO
			
				FETCH NEXT FROM CURSOR_REMARKS INTO @P_ORD_NO, @P_CLOSE_DT, @P_CLOSE_REMARKS, @P_CLOSE_DT_CHG_YN

			END

		CLOSE CURSOR_REMARKS
		DEALLOCATE CURSOR_REMARKS

		COMMIT;
	END TRY
	
	BEGIN CATCH	
		
		IF @@TRANCOUNT > 0
		BEGIN 
			ROLLBACK TRAN
			SET @RETURN_CODE = -1
			SET @RETURN_MESSAGE = ERROR_MESSAGE()

			--에러 로그 테이블 저장
			INSERT INTO TBL_ERROR_LOG 
			SELECT ERROR_PROCEDURE()		-- 프로시저명
				, ERROR_MESSAGE()			-- 에러메시지
				, ERROR_LINE()				-- 에러라인
				, GETDATE()	
		END 

	END CATCH
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE 
END

GO

