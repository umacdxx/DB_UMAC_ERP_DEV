
/*

-- 생성자 :	이동호
-- 등록일 :	2024.04.09
-- 수정자 : -
-- 설 명  : (PD_TEST_REPORT) 벌크제품 PDA에서 생성된 LOT로 시험 성적서 등록
-- 실행문 : 

*/
CREATE PROCEDURE [dbo].[PR_WMS_TEST_REPORT_PUT]
( 
	@P_SCAN_CODE			NVARCHAR(14) = '',	
	@P_LOT_NO				NVARCHAR(30) = '',			
	@P_IEMP_ID				NVARCHAR(20),				-- 사용자아이디
	@R_RETURN_CODE 			INT 			OUTPUT,		-- 리턴코드
	@R_RETURN_MESSAGE 		NVARCHAR(2000) 	OUTPUT 		-- 리턴메시지

)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	DECLARE @RETURN_CODE INT = 0									-- 리턴코드(저장완료)
	DECLARE @RETURN_MESSAGE NVARCHAR(MAX) = DBO.GET_ERR_MSG('0')	-- 리턴메시지
		
	DECLARE @LOT01 NVARCHAR(8) = ''
	DECLARE @LOT02 NVARCHAR(5) = ''
	DECLARE @LOT04 NVARCHAR(6) = ''

	DECLARE @N INT = 0;

	BEGIN TRAN
	BEGIN TRY 					
		
	
		IF NOT EXISTS(SELECT LOT_NO FROM PD_TEST_REPORT WHERE SCAN_CODE = @P_SCAN_CODE AND LOT_NO = @P_LOT_NO)
		BEGIN
			--20250824-SB-%-120002
			SET @LOT01 = DBO.FN_GET_SPLIT(@P_LOT_NO, '-', 1)
			SET @LOT02 = DBO.FN_GET_SPLIT(@P_LOT_NO, '-', 2)
			SET @LOT04 = DBO.FN_GET_SPLIT(@P_LOT_NO, '-', 4)
						
			IF EXISTS(SELECT LOT_NO FROM PD_TEST_REPORT WHERE LOT_NO LIKE '' + @LOT01 + '-'+ @LOT02 + '-%-' + @LOT04 )
			BEGIN
				--검색된 시험성적서 있을경우 LOT 번호 외 나머지 값은 동일하게 등록
				INSERT INTO PD_TEST_REPORT (SCAN_CODE, PROD_DT, LOT_NO, CHAR_RESULT, ACID_RESULT, PEROXIDE_RESULT, LODINE_RESULT, COLOR_RESULT, BENXO_RESULT, IDATE, IEMP_ID, UDATE, UEMP_ID)
				SELECT TOP 1 SCAN_CODE, PROD_DT, @P_LOT_NO, CHAR_RESULT, ACID_RESULT, PEROXIDE_RESULT, LODINE_RESULT, COLOR_RESULT, BENXO_RESULT, GETDATE(), IEMP_ID, GETDATE(), UEMP_ID
					FROM PD_TEST_REPORT WHERE SCAN_CODE = @P_SCAN_CODE AND (LOT_NO LIKE '' + @LOT01 + '-'+ @LOT02 + '-%-' + @LOT04)
						ORDER BY PROD_DT ASC											
			END
			ELSE
			BEGIN						
				INSERT INTO PD_TEST_REPORT (SCAN_CODE, PROD_DT, LOT_NO, CHAR_RESULT, ACID_RESULT, PEROXIDE_RESULT, LODINE_RESULT, COLOR_RESULT, BENXO_RESULT, IDATE, IEMP_ID, UDATE, UEMP_ID)
				VALUES (@P_SCAN_CODE, CONVERT(CHAR(8), GETDATE(), 112), @P_LOT_NO, '', 0.00, 0.00, 0.00, '', '', GETDATE(), @P_IEMP_ID, GETDATE(), @P_IEMP_ID);
			END	
		END



			
	COMMIT;
	END TRY
	
	BEGIN CATCH		

		IF @@TRANCOUNT > 0
		BEGIN 
			ROLLBACK TRAN
				
		SET @RETURN_CODE = -1
		SET @RETURN_MESSAGE = ERROR_MESSAGE()
		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()		-- 프로시저명
			, ERROR_MESSAGE()			-- 에러메시지
			, ERROR_LINE()				-- 에러라인
			, GETDATE()	
		END

	END CATCH

	SET @R_RETURN_CODE = @RETURN_CODE
	SET @R_RETURN_MESSAGE = @RETURN_MESSAGE
END

GO

