/*
-- 생성자 :	강세미
-- 등록일 :	2024.12.17
-- 수정자 : 
-- 수정일 : - 
-- 설 명  : 이기분 대장 내역
-- 실행문 : EXEC PR_CLOSING_OVER_LIST '20240901','20241201', '', '','','Order'
EXEC PR_CLOSING_OVER_LIST '20240901','20241201', '', '','','Purchase'
*/
CREATE PROCEDURE [dbo].[PR_CLOSING_OVER_LIST]
	@P_FROM_DT			NVARCHAR(8),			-- 조회시작일자
	@P_TO_DT			NVARCHAR(8),			-- 조회종료일자
	@P_DEPT_CODE		NVARCHAR(25),			-- 조직코드
	@P_MGNT_USER_ID		NVARCHAR(300),			-- 담당자ID (',' 구분)
	@P_OVER_GB 			NVARCHAR(4),			-- 이월전월구분 빈값: 전체 pre: 전월 over: 이월
	@P_ACTIVE_TAB		NVARCHAR(10)			-- TAB 구분 Purchase: 매입 Order: 매출
AS 
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	BEGIN TRY 

		WITH LIST AS (
			SELECT '2' AS IO_GB,
				   A.PICKING_QTY AS QTY,
				   A.SCAN_CODE,
				   B.DELIVERY_DEC_DT AS DELIVERY_DT,
				   B.CLOSE_DT,
				   B.VEN_CODE,
				   B.ORD_NO,
				   B.DELIVERY_CODE,
				   B.CLOSE_REMARKS
			  FROM PO_ORDER_DTL AS A
				INNER JOIN PO_ORDER_HDR AS B
					ON A.ORD_NO = B.ORD_NO
			   WHERE B.ORD_STAT IN ('35', '40')

			UNION ALL

			 SELECT '1' AS IO_GB,
				    A.PUR_QTY AS QTY,
				    A.SCAN_CODE,
				    B.DELIVERY_IN_DT AS DELIVERY_DT,
				    B.CLOSE_DT,
				    B.VEN_CODE,
				    B.ORD_NO,
				    B.DELIVERY_CODE,
				    B.CLOSE_REMARKS
			  FROM PO_PURCHASE_DTL AS A
				INNER JOIN PO_PURCHASE_HDR AS B
					ON A.ORD_NO = B.ORD_NO
				WHERE B.PUR_STAT IN ('35', '40')

		)

		SELECT A.QTY,
			   A.SCAN_CODE,
			   A.DELIVERY_DT, 
			   CASE	WHEN CAST(SUBSTRING(A.CLOSE_DT, 5, 2) AS INT) < CAST(SUBSTRING(A.DELIVERY_DT, 5, 2) AS INT) THEN '전월'
					WHEN CAST(SUBSTRING(A.CLOSE_DT, 5, 2) AS INT) > CAST(SUBSTRING(A.DELIVERY_DT, 5, 2) AS INT) THEN '이월'
			   	    ELSE '' END AS OVER_GB,
			   FORMAT(CAST(A.CLOSE_DT AS DATE), 'yyyy-MM-dd') AS CLOSE_DT,
			   FORMAT(CAST(A.CLOSE_DT AS DATE), 'yyyy-MM') AS CLOSE_DT_MM,
			   A.VEN_CODE,
			   A.ORD_NO,
			   A.CLOSE_REMARKS,
			   D.CAR_NO,
			   C.ITM_NAME,
			   C.WEIGHT_GB,
			   CASE WHEN C.WEIGHT_GB = 'WT' THEN D.NET_WGHT ELSE 0 END AS NET_WGHT,
			   CASE WHEN C.WEIGHT_GB = 'WT' THEN D.OFFICIAL_WGHT ELSE 0 END AS OFFICIAL_WGHT,
			   CASE WHEN C.WEIGHT_GB = 'WT' THEN D.NET_WGHT - D.OFFICIAL_WGHT ELSE 0 END AS GAP_WGHT,
			   (CONCAT_WS('/', IIF(I.DELIVERY_NAME_DEP1 IS NULL, NULL, I.DELIVERY_NAME_DEP1),
			   		 IIF(D.REMARKS IS NULL, NULL, D.REMARKS))) AS UP_DELIVERY_NAME_REMARKS,
			   I.DELIVERY_NAME_DEP2 AS DELIVERY_NAME,
			   E.VEN_NAME
		FROM LIST AS A
			INNER JOIN CD_PRODUCT_CMN AS C
					ON A.SCAN_CODE = C.SCAN_CODE
				LEFT OUTER JOIN PO_SCALE AS D
					ON A.ORD_NO = D.ORD_NO
				INNER JOIN CD_PARTNER_MST AS E
					ON A.VEN_CODE = E.VEN_CODE
				LEFT OUTER JOIN TBL_USER_MST AS F
					ON E.MGNT_USER_ID = F.[USER_ID]
				LEFT OUTER JOIN 
					( SELECT 
							A.VEN_CODE,
							A.DELIVERY_CODE, 
							(CASE WHEN A.DELIVERY_GB = '1' THEN '' ELSE A.DELIVERY_NAME END ) AS DELIVERY_NAME_DEP2,	--배송지명
							B.DELIVERY_NAME AS DELIVERY_NAME_DEP1														--배송그룹명
						FROM CD_PARTNER_DELIVERY AS A
						LEFT OUTER JOIN CD_PARTNER_DELIVERY AS B ON A.VEN_CODE = B.VEN_CODE AND CONCAT(SUBSTRING(A.DELIVERY_CODE, 1, 5), '01') = B.DELIVERY_CODE					
					) AS I ON  A.DELIVERY_CODE = I.DELIVERY_CODE AND A.VEN_CODE = I.VEN_CODE
		WHERE ((@P_ACTIVE_TAB = 'Order' AND A.IO_GB = '2') OR (@P_ACTIVE_TAB = 'Purchase' AND A.IO_GB = '1'))
		  AND (A.DELIVERY_DT BETWEEN @P_FROM_DT AND @P_TO_DT OR A.CLOSE_DT BETWEEN @P_FROM_DT AND @P_TO_DT)
		  AND 1 = CASE WHEN @P_DEPT_CODE = '' THEN 1 WHEN @P_DEPT_CODE <> '' AND F.DEPT_CODE LIKE @P_DEPT_CODE + '%' THEN 1 ELSE 0 END
		  --AND CAST(SUBSTRING(A.CLOSE_DT, 5, 2) AS INT) <> CAST(SUBSTRING(A.DELIVERY_DT, 5, 2) AS INT) -- 월이 다를 때만 조회
		  AND (
		  	  (@P_OVER_GB = '' AND CAST(SUBSTRING(A.CLOSE_DT, 5, 2) AS INT) <> CAST(SUBSTRING(A.DELIVERY_DT, 5, 2) AS INT))
		  	  OR (@P_OVER_GB = 'pre' AND CAST(SUBSTRING(A.CLOSE_DT, 5, 2) AS INT) < CAST(SUBSTRING(A.DELIVERY_DT, 5, 2) AS INT))
		  	  OR (@P_OVER_GB = 'over' AND CAST(SUBSTRING(A.CLOSE_DT, 5, 2) AS INT) > CAST(SUBSTRING(A.DELIVERY_DT, 5, 2) AS INT))
		  )
		  AND (
		  		@P_MGNT_USER_ID = ''
		  		OR
		  		( E.MGNT_USER_ID IN (SELECT VALUE FROM STRING_SPLIT(@P_MGNT_USER_ID, ','))
		  			OR ( 'ETC' IN (SELECT VALUE FROM STRING_SPLIT(@P_MGNT_USER_ID, ','))
		  					AND (E.MGNT_USER_ID IS NULL OR E.MGNT_USER_ID = ''))
		  		)
		  	)
	 ORDER BY A.DELIVERY_DT


	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

