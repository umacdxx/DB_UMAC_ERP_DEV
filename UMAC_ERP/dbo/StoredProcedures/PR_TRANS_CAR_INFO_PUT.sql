/*
-- 생성자 :	강세미
-- 등록일 :	2024.09.03
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 차량정보 저장
-- 실행문 : EXEC PR_TRANS_CAR_INFO_PUT '12나4154','3', '01055554444', '강세미', 'gg', 'I', 'admin'
*/
CREATE PROCEDURE [dbo].[PR_TRANS_CAR_INFO_PUT]
	@P_CAR_NO			NVARCHAR(8),	-- 차량번호
	@P_CAR_GB			NVARCHAR(1),	-- 차량구분
	@P_MOBIL_NO			NVARCHAR(11),	-- 휴대폰번호
	@P_DRIVER_NAME		NVARCHAR(20),	-- 기사명
	@P_DRIVER_VEN_NAME	NVARCHAR(50),	-- 회사명
	@P_MODE				NVARCHAR(1),	-- 등록: I, 수정:U, 삭제:D
	@P_EMP_ID			NVARCHAR(20)	-- 아이디
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	 
	DECLARE @RETURN_CODE			INT = 0								-- 리턴코드
	DECLARE @RETURN_MESSAGE			NVARCHAR(20) = '저장되었습니다.'	-- 리턴메시지
	DECLARE @P_MOBIL_NO_ENCRYPT		VARBINARY(256)						-- 암호화 전화번호

	BEGIN TRAN
	BEGIN TRY 
	EXEC UMAC_CERT_OPEN_KEY; -- OPEN
	

		SET @P_MOBIL_NO_ENCRYPT = DBO.GET_ENCRYPT(@P_MOBIL_NO);
	 
		IF @P_MODE = 'I'
		BEGIN
			IF EXISTS(SELECT 1 FROM PO_CAR_INFO WHERE CAR_NO = @P_CAR_NO)
			BEGIN
				SET @RETURN_CODE = -1
				SET @RETURN_MESSAGE	= '이미 등록된 차량정보입니다.'
			END
			ELSE 
			BEGIN
				INSERT INTO PO_CAR_INFO(CAR_NO, CAR_GB, MOBIL_NO, DRIVER_NAME, DRIVER_VEN_NAME, IDATE, IEMP_ID)
				VALUES(@P_CAR_NO, @P_CAR_GB, @P_MOBIL_NO_ENCRYPT, @P_DRIVER_NAME, @P_DRIVER_VEN_NAME, GETDATE(), @P_EMP_ID)
			END
		END
		ELSE IF @P_MODE = 'U'
		BEGIN
			UPDATE PO_CAR_INFO 
			   SET CAR_GB = @P_CAR_GB,
				   MOBIL_NO = @P_MOBIL_NO_ENCRYPT,
				   DRIVER_NAME = @P_DRIVER_NAME,
				   DRIVER_VEN_NAME = @P_DRIVER_VEN_NAME,
				   UDATE = GETDATE(),
				   UEMP_ID = @P_EMP_ID
			 WHERE CAR_NO = @P_CAR_NO
							
		END
		ELSE
		BEGIN
			DELETE PO_CAR_INFO WHERE CAR_NO = @P_CAR_NO
		END
		

		SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE

		COMMIT
	EXEC UMAC_CERT_CLOSE_KEY -- CLOSE
	END TRY
	BEGIN CATCH		
		IF @@TRANCOUNT > 0
		BEGIN 
			ROLLBACK TRAN
			
			--에러 로그 테이블 저장
			INSERT INTO TBL_ERROR_LOG 
			SELECT ERROR_PROCEDURE()	-- 프로시저명
			, ERROR_MESSAGE()			-- 에러메시지
			, ERROR_LINE()				-- 에러라인
			, GETDATE()	

			SET @RETURN_CODE = -1 -- 저장실패
			SET @RETURN_MESSAGE = DBO.GET_ERR_MSG('-1')
		END
	END CATCH
	
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE
END

GO

