/*
-- 생성자 :	윤현빈
-- 등록일 :	2024.05.17
-- 수정자 : -
-- 수정일 : - 
-- 설 명  : 상품별재고현황
-- 실행문 : EXEC PR_STOCK_LIST '','','','',''
*/
CREATE PROCEDURE [dbo].[PR_STOCK_LIST]
( 
	@P_VEN_CODE		NVARCHAR(7) = '',	-- 거래처코드
	@P_SCAN_CODE	NVARCHAR(14) = '',	-- 상품코드
	@P_LRG_CODE	 	NVARCHAR(2) = '',	-- 대분류 코드
	@P_MID_CODE	 	NVARCHAR(4) = '',	-- 중분류 코드
	@P_GRE_GB	 	NVARCHAR(1)			-- 매출입 구분
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	BEGIN TRY 	
		
		WITH W_NOT_DELIVERY AS (
			SELECT A.SCAN_CODE
			     , SUM(A.NOT_DELIVERY_QTY) AS NOT_DELIVERY_QTY
				FROM (
					SELECT CASE WHEN C.ITM_FORM = '2' THEN ISNULL(D.SCAN_CODE, B.SCAN_CODE) ELSE B.SCAN_CODE END AS SCAN_CODE
						 , CASE WHEN C.ITM_FORM = '2' THEN SUM(B.ORD_QTY * ISNULL(D.IPSU_QTY, 0)) ELSE SUM(B.ORD_QTY) END AS NOT_DELIVERY_QTY
						FROM PO_ORDER_HDR AS A
						INNER JOIN PO_ORDER_DTL AS B ON A.ORD_NO = B.ORD_NO
						INNER JOIN CD_PRODUCT_CMN AS C ON B.SCAN_CODE = C.SCAN_CODE
						LEFT OUTER JOIN (
											SELECT A.BOX_CODE
												 , B.SCAN_CODE
												 , A.IPSU_QTY
												FROM CD_BOX_MST AS A
												INNER JOIN CD_PRODUCT_CMN AS B ON A.ITM_CODE = B.ITM_CODE
						--) AS D ON B.SCAN_CODE = D.SCAN_CODE
						) AS D ON C.ITM_CODE = D.BOX_CODE
					   WHERE A.ORD_STAT IN (SELECT CD_ID 
												FROM TBL_COMM_CD_MST 
											   WHERE CD_CL = 'AVL_INV_STAT')
						 AND C.ITM_FORM != '3'
					   GROUP BY (CASE WHEN C.ITM_FORM = '2' THEN ISNULL(D.SCAN_CODE, B.SCAN_CODE) ELSE B.SCAN_CODE END), C.ITM_FORM
				) AS A
			   GROUP BY SCAN_CODE
		), W_LOT_CNT AS (
			SELECT A.SCAN_CODE
			     , COUNT(1) AS LOT_CNT
				FROM IV_LOT_STAT AS A
 			   WHERE A.CUR_INV_QTY != 0
			   GROUP BY SCAN_CODE
		), W_IV_PRODUCT_STAT AS (
			SELECT A.SCAN_CODE
				 , CASE WHEN ITM_FORM = '2' THEN ISNULL(C.CUR_INV_QTY, 0) ELSE A.CUR_INV_QTY END AS CUR_INV_QTY
				FROM IV_PRODUCT_STAT AS A
				LEFT OUTER JOIN CD_BOX_MST AS B ON A.ITM_CODE = B.BOX_CODE
				LEFT OUTER JOIN IV_PRODUCT_STAT AS C ON B.ITM_CODE = C.ITM_CODE
				LEFT OUTER JOIN CD_PRODUCT_CMN AS D ON A.SCAN_CODE = D.SCAN_CODE
			   WHERE ITM_FORM != '3'
		), W_PRODUCT_CMM AS (
			SELECT A.SCAN_CODE
			     , A.ITM_NAME
			     , A.MID_CODE
				 , A.WEIGHT_GB
				 , A.GRE_GB
				 , A.VEN_CODE
				 , A.VEN_CODE_2
				 , A.VEN_CODE_3
				 , A.VEN_CODE_4
				 , A.VEN_CODE_5
				 , CASE WHEN A.ITM_FORM = '2' THEN ISNULL(C.NET_WEIGHT, 0) ELSE A.NET_WEIGHT END AS NET_WEIGHT
				FROM CD_PRODUCT_CMN AS A
				LEFT OUTER JOIN CD_BOX_MST AS B ON A.ITM_CODE = B.BOX_CODE
				LEFT OUTER JOIN CD_PRODUCT_CMN AS C ON B.ITM_CODE = C.ITM_CODE
		)
		SELECT A.SCAN_CODE
		     , B.ITM_NAME 
		     , CONCAT_WS(', ',
		     	CASE WHEN VEN_1.VEN_NAME IS NOT NULL THEN VEN_1.VEN_NAME ELSE NULL END,
		     	CASE WHEN VEN_2.VEN_NAME IS NOT NULL THEN VEN_2.VEN_NAME ELSE NULL END,
		     	CASE WHEN VEN_3.VEN_NAME IS NOT NULL THEN VEN_3.VEN_NAME ELSE NULL END,
		     	CASE WHEN VEN_4.VEN_NAME IS NOT NULL THEN VEN_4.VEN_NAME ELSE NULL END,
		     	CASE WHEN VEN_5.VEN_NAME IS NOT NULL THEN VEN_5.VEN_NAME ELSE NULL END
		     ) AS VEN_NAME_LIST
		     , LRG.LRG_NAME 
		     , MID.MID_NAME 
			 , CASE WHEN B.WEIGHT_GB = 'QTY' THEN CONCAT(FORMAT(A.CUR_INV_QTY, 'N0'), ' EA', ' (', FORMAT(ROUND(CAST(A.CUR_INV_QTY * ISNULL(B.NET_WEIGHT, 0) AS FLOAT) / 1000, 1), 'N2'), ' KG)')
					WHEN B.WEIGHT_GB = 'WT' THEN CONCAT(FORMAT(ROUND(A.CUR_INV_QTY, 1), 'N2'), ' KG') END AS CUR_INV_QTY
			 , CASE WHEN B.WEIGHT_GB = 'QTY' THEN CONCAT(FORMAT(ISNULL(C.NOT_DELIVERY_QTY, 0), 'N0'), ' EA', ' (', FORMAT(ROUND(CAST(ISNULL(C.NOT_DELIVERY_QTY, 0) * ISNULL(B.NET_WEIGHT, 0) AS FLOAT) / 1000, 1), 'N2'), ' KG)')
			        WHEN B.WEIGHT_GB = 'WT' THEN  CONCAT(FORMAT(ROUND(ISNULL(C.NOT_DELIVERY_QTY, 0), 1), 'N2'), ' KG') END AS NOT_DELIVERY_QTY
			 , CASE WHEN B.WEIGHT_GB = 'QTY' THEN CONCAT(FORMAT(A.CUR_INV_QTY - ISNULL(C.NOT_DELIVERY_QTY, 0), 'N0'), ' EA', ' (', FORMAT(ROUND(CAST((A.CUR_INV_QTY - ISNULL(C.NOT_DELIVERY_QTY, 0)) * ISNULL(B.NET_WEIGHT, 0) AS FLOAT) / 1000, 1), 'N2'), ' KG)')
			        WHEN B.WEIGHT_GB = 'WT' THEN CONCAT(FORMAT(ROUND(A.CUR_INV_QTY - ISNULL(C.NOT_DELIVERY_QTY, 0), 1), 'N2'), ' KG') END AS AVAILABLE_STOCK_QTY
		     , ISNULL(D.LOT_CNT, 0) AS LOT_CNT
			FROM W_IV_PRODUCT_STAT AS A
			INNER JOIN W_PRODUCT_CMM AS B ON A.SCAN_CODE = B.SCAN_CODE
			INNER JOIN CD_MID_MST AS MID ON B.MID_CODE = MID.MID_CODE 
			INNER JOIN CD_LRG_MST AS LRG ON MID.LRG_CODE = LRG.LRG_CODE 
			LEFT OUTER JOIN W_NOT_DELIVERY AS C ON A.SCAN_CODE = C.SCAN_CODE
			LEFT OUTER JOIN W_LOT_CNT AS D ON A.SCAN_CODE = D.SCAN_CODE
			LEFT OUTER JOIN CD_PARTNER_MST AS VEN_1 ON B.VEN_CODE = VEN_1.VEN_CODE
			LEFT OUTER JOIN CD_PARTNER_MST AS VEN_2 ON B.VEN_CODE_2 = VEN_2.VEN_CODE
			LEFT OUTER JOIN CD_PARTNER_MST AS VEN_3 ON B.VEN_CODE_3 = VEN_3.VEN_CODE
			LEFT OUTER JOIN CD_PARTNER_MST AS VEN_4 ON B.VEN_CODE_4 = VEN_4.VEN_CODE
			LEFT OUTER JOIN CD_PARTNER_MST AS VEN_5 ON B.VEN_CODE_5 = VEN_5.VEN_CODE
		   WHERE 1=(CASE WHEN @P_SCAN_CODE = '' THEN 1 WHEN @P_SCAN_CODE != '' AND B.SCAN_CODE = @P_SCAN_CODE THEN 1 ELSE 2 END)
		     AND 1=(CASE WHEN @P_VEN_CODE = '' THEN 1
		                 WHEN @P_VEN_CODE != '' AND B.VEN_CODE = @P_VEN_CODE THEN 1
		                 WHEN @P_VEN_CODE != '' AND B.VEN_CODE_2 = @P_VEN_CODE THEN 1
		                 WHEN @P_VEN_CODE != '' AND B.VEN_CODE_3 = @P_VEN_CODE THEN 1
		                 WHEN @P_VEN_CODE != '' AND B.VEN_CODE_4 = @P_VEN_CODE THEN 1
		                 WHEN @P_VEN_CODE != '' AND B.VEN_CODE_5 = @P_VEN_CODE THEN 1 ELSE 2 END
		     )
		     AND 1=(CASE WHEN @P_LRG_CODE = '' THEN 1 WHEN @P_LRG_CODE != '' AND LRG.LRG_CODE = @P_LRG_CODE THEN 1 ELSE 2 END)
		     AND 1=(CASE WHEN @P_MID_CODE = '' THEN 1 WHEN @P_MID_CODE != '' AND MID.MID_CODE = @P_MID_CODE THEN 1 ELSE 2 END)
		     AND 1=(CASE WHEN @P_GRE_GB = '' THEN 1 WHEN @P_GRE_GB != '' AND B.GRE_GB = @P_GRE_GB THEN 1 ELSE 2 END)
		   ORDER BY A.SCAN_CODE

	END TRY
	
	BEGIN CATCH		
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()				-- 에러라인
		, GETDATE()	
	END CATCH
	
END

GO

