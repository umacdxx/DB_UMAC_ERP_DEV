/*
-- 생성자	: 이동호
-- 등록일	: 2024.01.29
-- 수정자	: -
-- 수정일	: - 
-- 설 명	: 상품마스터 등록관리
-- 실행문 : 

-- 2024.05.02 순중량 추가 : 윤현빈
*/

CREATE PROCEDURE [dbo].[PR_PRODUCT_CMN_PUT]
(
	@P_ITM_CODE NVARCHAR(6),						-- 관리코드
	@P_SCAN_CODE NVARCHAR(14), 						-- 상품코드
	@P_BARCODE_YN NVARCHAR(1), 						-- 바코드유무
	@P_ITM_NAME NVARCHAR(50), 						-- 상품명
	@P_ITM_NAME_DETAIL NVARCHAR(100), 				-- 제품명(상세)
	@P_VEN_CODE NVARCHAR(7), 						-- 거래처코드1
	@P_VEN_CODE_2 NVARCHAR(7), 						-- 거래처코드2
	@P_VEN_CODE_3 NVARCHAR(7), 						-- 거래처코드3
	@P_VEN_CODE_4 NVARCHAR(7), 						-- 거래처코드4
	@P_VEN_CODE_5 NVARCHAR(7), 						-- 거래처코드5	
	@P_GRE_GB NVARCHAR(1), 							-- 거래구분
	@P_ITM_GB NVARCHAR(1), 							-- 상품구분
	@P_END_IND NVARCHAR(1), 						-- 취급여부			
	@P_MID_CODE NVARCHAR(4), 						-- 중분류코드
	@P_ITM_FORM NVARCHAR(2), 						-- 상품형태
	@P_TAX_GB NVARCHAR(1), 							-- 과/면세 구분
	@P_UNIT NVARCHAR(2), 							-- 단위
	@P_WEIGHT_GB NVARCHAR(3), 						-- 수(중)량구분
	@P_IPSU_QTY INT, 								-- 입수
	@P_PLT_BOX_QTY INT, 							-- PLT 박스 환산량	
	@P_UNIT_CAPACITY INT, 							-- 표시용량
	@P_UNIT_WEIGHT INT, 							-- 상품무게
	@P_NET_WEIGHT INT, 								-- 순중량
	@P_CURRENCY_TYPE NVARCHAR(3), 					-- 환종(KRW,USD) 공통코드	
	@P_BASE_WPRC DECIMAL(15,2), 					-- 원가공급
	@P_BASE_WVAT DECIMAL(15,2), 					-- 원가부가세
	@P_BASE_SPRC DECIMAL(17,4), 					-- 매가공급가
	@P_BASE_SVAT DECIMAL(17,4), 					-- 매가부가세
	@P_WIDTH DECIMAL(3,1), 							-- 상품 가로
	@P_LENGTH DECIMAL(3,1), 						-- 상품 세로
	@P_DEPTH DECIMAL(3,1), 							-- 상품 높이
	@P_LOT_OIL_GB NVARCHAR(6), 						-- LOT 유종구분
	@P_LOT_PARTNER_GB NVARCHAR(6), 					-- LOT 거래처 구분
	@P_BOM_GB NVARCHAR(1), 							-- BOM구분	
	@P_SET_GB NVARCHAR(1), 							-- SET구분	
	@P_EXPIRY_CNT INT = NULL, 						-- 소비기한 계산일자
	@P_IEMP_IP NVARCHAR(50), 						-- 등록아이피
	@P_IEMP_ID NVARCHAR(20) 						-- 등록사원번호
)
AS
BEGIN
	
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	DECLARE @RETURN_CODE INT = 0							-- 결과코드 정상 : '0', 실패 : -1
	DECLARE @RETURN_MESSAGE VARCHAR(50) = 'OK'		-- 결과메시지
			
	BEGIN TRY 
		
		IF LEN(@P_ITM_CODE) = 2 
		BEGIN
		-- 등록
			
			DECLARE @ITM_CODE NVARCHAR(6) = ''
			DECLARE @SCAN_CODE NVARCHAR(14) = ''

			-- 관리 코드 생성
			SELECT 
				@ITM_CODE = IIF(ITM_CODE IS NULL, @P_ITM_CODE + '0001', ITM_CODE)
			FROM (
 				SELECT MAX(ITM_CODE) + 1 AS ITM_CODE FROM CD_PRODUCT_CMN 
						WHERE SUBSTRING(ITM_CODE, 1, 2)  = CAST(@P_ITM_CODE AS INT)
			) AS T1

			-- 바코드선택 N 인경우 상품코드로 스캔코드 업데이트
			IF @P_BARCODE_YN = 'N'
				SET @P_SCAN_CODE = @ITM_CODE
			
			-- 상품코드가 있을경우 상품코드 중복 체크
			IF @P_SCAN_CODE != ''
			BEGIN
				SELECT TOP 1 @SCAN_CODE = SCAN_CODE FROM CD_PRODUCT_CMN WHERE SCAN_CODE = @P_SCAN_CODE
				IF @SCAN_CODE != ''
				BEGIN
					SET @RETURN_CODE = -1
					SET @RETURN_MESSAGE = '이미 등록된 상품코드가 있습니다.'
					SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE
					RETURN
				END
			END

			INSERT INTO CD_PRODUCT_CMN (ITM_CODE, SCAN_CODE, ITM_NAME, ITM_NAME_DETAIL, 
				VEN_CODE, VEN_CODE_2, VEN_CODE_3, VEN_CODE_4, VEN_CODE_5,
				GRE_GB, ITM_GB, END_IND, MID_CODE, ITM_FORM, TAX_GB, UNIT, WEIGHT_GB, IPSU_QTY, PLT_BOX_QTY, UNIT_CAPACITY, UNIT_WEIGHT, NET_WEIGHT, CURRENCY_TYPE,
				BASE_WPRC, BASE_WVAT, BASE_SPRC, BASE_SVAT, 
				WIDTH, [LENGTH], DEPTH, LOT_OIL_GB, LOT_PARTNER_GB, BOM_GB, SET_GB, EXPIRY_CNT, IDATE, IEMP_IP, IEMP_ID)
			VALUES(@ITM_CODE, @P_SCAN_CODE, @P_ITM_NAME, @P_ITM_NAME_DETAIL, 
				@P_VEN_CODE, @P_VEN_CODE_2, @P_VEN_CODE_3, @P_VEN_CODE_4, @P_VEN_CODE_5,
				@P_GRE_GB, @P_ITM_GB, @P_END_IND, @P_MID_CODE, @P_ITM_FORM, @P_TAX_GB, @P_UNIT, @P_WEIGHT_GB, @P_IPSU_QTY, @P_PLT_BOX_QTY, @P_UNIT_CAPACITY, @P_UNIT_WEIGHT, @P_NET_WEIGHT, @P_CURRENCY_TYPE,
				@P_BASE_WPRC, @P_BASE_WVAT, @P_BASE_SPRC, @P_BASE_SVAT, 
				@P_WIDTH, @P_LENGTH, @P_DEPTH, @P_LOT_OIL_GB, @P_LOT_PARTNER_GB, @P_BOM_GB, @P_SET_GB, @P_EXPIRY_CNT, GETDATE(), @P_IEMP_IP, @P_IEMP_ID)

			IF @P_ITM_FORM != '2'
			BEGIN
				MERGE INTO IV_PRODUCT_STAT AS A
					USING (SELECT 1 AS dual) AS B
					ON (A.SCAN_CODE = @P_SCAN_CODE)
				WHEN NOT MATCHED THEN
					INSERT (SCAN_CODE, ITM_CODE, LAST_PUR_DT, LAST_SALE_DT, CUR_INV_QTY, UDATE)
					VALUES (@P_SCAN_CODE, @ITM_CODE, NULL, NULL, 0, GETDATE())
				;
			END

			SET @RETURN_MESSAGE = @P_SCAN_CODE

		END
		ELSE IF LEN(@P_ITM_CODE) = 6
		BEGIN 
		-- 수정
			UPDATE CD_PRODUCT_CMN SET ITM_NAME = @P_ITM_NAME, ITM_NAME_DETAIL = @P_ITM_NAME_DETAIL, 
					VEN_CODE = @P_VEN_CODE, VEN_CODE_2 = @P_VEN_CODE_2, VEN_CODE_3 = @P_VEN_CODE_3, VEN_CODE_4 = @P_VEN_CODE_4, VEN_CODE_5 = @P_VEN_CODE_5,
					GRE_GB = @P_GRE_GB, ITM_GB = @P_ITM_GB, END_IND = @P_END_IND, MID_CODE = @P_MID_CODE, 
					ITM_FORM = @P_ITM_FORM, TAX_GB = @P_TAX_GB, UNIT = @P_UNIT, 
					WEIGHT_GB = @P_WEIGHT_GB, IPSU_QTY = @P_IPSU_QTY, PLT_BOX_QTY = @P_PLT_BOX_QTY, UNIT_CAPACITY = @P_UNIT_CAPACITY, UNIT_WEIGHT = @P_UNIT_WEIGHT, NET_WEIGHT = @P_NET_WEIGHT, CURRENCY_TYPE = @P_CURRENCY_TYPE,
					BASE_WPRC = @P_BASE_WPRC, BASE_WVAT = @P_BASE_WVAT, BASE_SPRC = @P_BASE_SPRC, BASE_SVAT = @P_BASE_SVAT, 
					WIDTH = @P_WIDTH, [LENGTH] = @P_LENGTH, DEPTH = @P_DEPTH, 
					LOT_OIL_GB = @P_LOT_OIL_GB, LOT_PARTNER_GB = @P_LOT_PARTNER_GB, BOM_GB = @P_BOM_GB, 
					SET_GB = @P_SET_GB, EXPIRY_CNT = @P_EXPIRY_CNT, UDATE = GETDATE(), UEMP_IP = @P_IEMP_IP, UEMP_ID = @P_IEMP_ID
				WHERE ITM_CODE = @P_ITM_CODE AND SCAN_CODE = @P_SCAN_CODE

			SET @RETURN_MESSAGE = @P_SCAN_CODE
		END
		
					 						 	 					 	 					 	 				
	END TRY
	BEGIN CATCH	
		SET @RETURN_CODE  = -1
		SET @RETURN_MESSAGE  = ERROR_MESSAGE()			
		--에러 로그 테이블 저장
		INSERT INTO TBL_ERROR_LOG 
		SELECT ERROR_PROCEDURE()	-- 프로시저명
		, ERROR_MESSAGE()			-- 에러메시지
		, ERROR_LINE()					-- 에러라인
		, GETDATE()
						        				        		
	END CATCH
	
	--결과 출력
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE
    
END

GO

