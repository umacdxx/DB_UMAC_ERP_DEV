
/*
-- 생성자 :	최수민
-- 등록일 :	2024.07.09
-- 설 명  : 모바일(앱) 재고실사 상품 등록
			
-- 수정자 : -
-- 수정일 : - 
-- 실행문 : 

DECLARE @JSONDT NVARCHAR(MAX) = 
'{	
	"stockProductRQ": [
			{
				"SCAN_CODE": "string",
				"LOT_NO": "string",
				"SURVEY_QTY": 0
			}
		],
	"stockInfoRQ": {
		"SURVEY_ID": "string",
		"INV_SURVEY_GB": "string",
		"INV_FLAG": 0,
		"INV_DT": "string",
		"IEMP_ID": "string"
	}
}'
	EXEC PR_MO_STOCK_AUDIT_PUT @JSONDT
*/
CREATE PROCEDURE [dbo].[PR_MO_STOCK_AUDIT_PUT]
( 	
	@P_JSONDT			VARCHAR(8000) = ''
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	DECLARE @RETURN_CODE	INT = 0										-- 리턴코드(저장완료)
	DECLARE @RETURN_MESSAGE NVARCHAR(MAX) = DBO.GET_ERR_MSG('0')		-- 리턴메시지
	
	BEGIN TRAN
	BEGIN TRY 

		DECLARE 			
			@P_SURVEY_ID NVARCHAR(8),
			@P_INV_SURVEY_GB NVARCHAR(1),
			@P_INV_FLAG NVARCHAR(1),
			@P_INV_DT NVARCHAR(8),
			@P_EMP_ID NVARCHAR(20),
			@V_INV_END_QTY INT,
			@MAX_SURVEY_ID NVARCHAR(8) = '';

		DECLARE @TMP_ITEM TABLE (
			SCAN_CODE NVARCHAR(14),
			LOT_NO NVARCHAR(30),
			SURVEY_QTY INT
		)
		DECLARE @TMP_INFO TABLE (
			SURVEY_ID NVARCHAR(8),
			INV_SURVEY_GB NVARCHAR(1),
			INV_FLAG NVARCHAR(1),
			INV_DT NVARCHAR(8),
			IEMP_ID NVARCHAR(20)
		)

		--#재고실사 상품 정보
		INSERT INTO @TMP_ITEM
		SELECT SCAN_CODE, LOT_NO, SURVEY_QTY
		  FROM OPENJSON ( @P_JSONDT, '$.stockProductRQ' )   
		  WITH ( SCAN_CODE NVARCHAR(14) '$.SCAN_CODE'
			   , LOT_NO NVARCHAR(30) '$.LOT_NO'
			   , SURVEY_QTY INT '$.SURVEY_QTY'
			   )

		--#재고조사 기본 정보
		INSERT INTO @TMP_INFO
		SELECT SURVEY_ID, INV_SURVEY_GB, INV_FLAG, INV_DT, IEMP_ID
		  FROM OPENJSON ( @P_JSONDT, '$.stockInfoRQ' )   
		  WITH ( SURVEY_ID NVARCHAR(8) '$.SURVEY_ID'
			   , INV_SURVEY_GB NVARCHAR(1) '$.INV_SURVEY_GB'
			   , INV_FLAG NVARCHAR(1) '$.INV_FLAG'
			   , INV_DT NVARCHAR(8) '$.INV_DT'
			   , IEMP_ID NVARCHAR(20) '$.IEMP_ID'
			   )

		SELECT @P_SURVEY_ID = SURVEY_ID
			 , @P_INV_SURVEY_GB = INV_SURVEY_GB
			 , @P_INV_FLAG = INV_FLAG
			 , @P_INV_DT = INV_DT
			 , @P_EMP_ID = IEMP_ID
		  FROM @TMP_INFO


		DECLARE CURSOR_STOCK CURSOR FOR

			SELECT B.ITM_CODE, A.SCAN_CODE, A.LOT_NO, A.SURVEY_QTY 
			  FROM @TMP_ITEM A
			 INNER JOIN CD_PRODUCT_CMN AS B
			    ON A.SCAN_CODE = B.SCAN_CODE
			
		OPEN CURSOR_STOCK

		DECLARE @P_ITM_CODE NVARCHAR(6),
				@P_SCAN_CODE NVARCHAR(14),
				@P_LOT_NO NVARCHAR(30),
				@P_SURVEY_QTY INT

		FETCH NEXT FROM CURSOR_STOCK INTO @P_ITM_CODE, @P_SCAN_CODE, @P_LOT_NO, @P_SURVEY_QTY
			
			WHILE(@@FETCH_STATUS=0)
			BEGIN
			
				SELECT @MAX_SURVEY_ID = MAX(SURVEY_ID)
				  FROM IV_SCHEDULER AS A
				 WHERE A.CFM_FLAG = 'Y'
				   AND A.INV_DT LIKE SUBSTRING(@P_SURVEY_ID, 1, 6) + '%'
				   AND A.SURVEY_ID != @P_SURVEY_ID
				;

				IF @MAX_SURVEY_ID != ''
				BEGIN
					SELECT @V_INV_END_QTY = MAX(A.SURVEY_QTY_2)
					  FROM IV_STOCK_SURVEY AS A
					 WHERE A.INV_DT = @P_INV_DT
					   AND A.SURVEY_ID = @MAX_SURVEY_ID
					   AND A.ITM_CODE = @P_ITM_CODE
					   AND A.LOT_NO = @P_LOT_NO
					;
				END

				IF @MAX_SURVEY_ID = '' OR @V_INV_END_QTY IS NULL
				BEGIN
					SELECT @V_INV_END_QTY = ISNULL(MAX(A.INV_END_QTY), 0)
					  FROM IV_DT_ITEM_LOT_COLL AS A
					 WHERE A.INV_DT = CONVERT(VARCHAR(8), DATEADD(DAY, -1, CONVERT(DATE, @P_INV_DT, 112)), 112)
					   AND A.ITM_CODE = @P_ITM_CODE
					   AND A.LOT_NO = @P_LOT_NO
				END

				MERGE INTO IV_STOCK_SURVEY AS A
					USING (SELECT 1 AS dual) AS B ON A.SURVEY_ID = @P_SURVEY_ID AND A.SCAN_CODE = @P_SCAN_CODE AND A.LOT_NO = @P_LOT_NO AND A.INV_FLAG = @P_INV_FLAG
				WHEN MATCHED THEN
					UPDATE SET
						--A.SURVEY_QTY_1 = ISNULL(A.SURVEY_QTY_2,  A.SURVEY_QTY_1)
						A.SURVEY_QTY_2 = A.SURVEY_QTY_2 + @P_SURVEY_QTY
						, A.UDATE = GETDATE()
						, A.UEMP_ID = @P_EMP_ID
					
				WHEN NOT MATCHED THEN
					INSERT 
					(
						INV_DT
						, ITM_CODE
						, SCAN_CODE
						, SURVEY_ID
						, LOT_NO
						, SURVEY_QTY_1
						, SURVEY_QTY_2
						, SURVEY_GB
						, INV_FLAG
						, IDATE
						, IEMP_ID
					)
					VALUES
					(
						@P_INV_DT
						, @P_ITM_CODE
						, @P_SCAN_CODE
						, @P_SURVEY_ID
						, @P_LOT_NO
						, @V_INV_END_QTY
						, @P_SURVEY_QTY
						, @P_INV_SURVEY_GB
						, @P_INV_FLAG
						, GETDATE()
						, @P_EMP_ID
					)
				;
				
				FETCH NEXT FROM CURSOR_STOCK INTO @P_ITM_CODE, @P_SCAN_CODE, @P_LOT_NO, @P_SURVEY_QTY


			END
		
		CLOSE CURSOR_STOCK
		DEALLOCATE CURSOR_STOCK


	COMMIT
	END TRY
	
	BEGIN CATCH		
		
		IF @@TRANCOUNT > 0
		BEGIN 
			ROLLBACK TRAN
			SET @RETURN_CODE = -1
			SET @RETURN_MESSAGE = ERROR_MESSAGE()

			--에러 로그 테이블 저장
			INSERT INTO TBL_ERROR_LOG 
			SELECT ERROR_PROCEDURE()		-- 프로시저명
				, ERROR_MESSAGE()			-- 에러메시지
				, ERROR_LINE()				-- 에러라인
				, GETDATE()	
		END 
		
	END CATCH
	SELECT @RETURN_CODE AS RETURN_CODE, @RETURN_MESSAGE AS RETURN_MESSAGE 
	
END

GO

